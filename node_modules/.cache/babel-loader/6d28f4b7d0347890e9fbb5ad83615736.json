{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/thread-loader/dist/cjs.js!/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js!/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Season.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Season.vue","mtime":1645457848450},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Season.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container fluid>\n      <b-row>\n        <b-col cols=\"2\" v-for=\"(season, count) in seasons\" :key=\"season.id\">\n          <b-card no-body class=\"m-1 p-1\" style=\"max-width: 10rem\">\n            <b-row>\n              <b-col>\n                <b-button\n                  :variant=\"selectButtonColor(count)\"\n                  v-on:click=\"currentSeason = season.id\"\n                  v-on:dblclick=\"editSeasonName(count)\"\n                  size=\"sm\"\n                  >{{ season.name }}</b-button\n                >\n              </b-col>\n              <b-col>\n                <b-form-input\n                  v-model=\"season.percent\"\n                  type=\"number\"\n                  size=\"sm\"\n                  @change=\"saveSeasons\"\n                ></b-form-input>\n              </b-col>\n            </b-row>\n          </b-card>\n        </b-col>\n        <b-col class=\"mt-3\">\n          <b-icon\n            @click=\"addSeason\"\n            variant=\"success\"\n            icon=\"plus\"\n            scale=\"3\"\n            class=\"mr-3\"\n          ></b-icon>\n\n          <b-icon\n            @click=\"deleteSeason\"\n            variant=\"danger\"\n            icon=\"trash\"\n            scale=\"2\"\n          ></b-icon>\n        </b-col>\n      </b-row>\n\n      <season-name-modal\n        v-if=\"seasons.length > 0\"\n        :seasonIndex=\"seasonIndex\"\n        :seasons=\"seasons\"\n      ></season-name-modal>\n      <add-season-modal\n        v-if=\"seasons.length > 0\"\n        :seasonId=\"currentSeason\"\n        :seasons=\"seasons\"\n      ></add-season-modal>\n    </b-container>\n    <ag-grid-vue\n      style=\"width: 100%; height: 100%\"\n      class=\"ag-theme-alpine\"\n      :columnDefs=\"columnDefs\"\n      :rowData=\"rowData\"\n      :gridOptions=\"gridOptions\"\n    >\n    </ag-grid-vue>\n  </div>\n</template>\n\n<script>\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport SeasonNameModal from \"../components/SeasonNameModal.vue\";\nimport AddSeasonModal from \"../components/AddSeasonModal.vue\";\nimport axios from \"axios\";\nimport { AgGridVue } from \"ag-grid-vue\";\nimport CONST from \"../services/constant.js\";\n\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      columnDefs: null,\n      rowData: null,\n      gridOptions: null,\n      seasons: [],\n\n      currentSeason: 1,\n      seasonalityProduct: null, \n      lastSeasonIndex : 0,\n      seasonIndex: 1,\n      ready : false\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n  },\n\n  components: {\n    AgGridVue,\n    \"season-name-modal\": SeasonNameModal,\n    \"add-season-modal\": AddSeasonModal,\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.gridApi.sizeColumnsToFit();\n    this.fetchProductList();\n    this.fetchSeasonality();\n\n  },\n  \n  beforeMount() {\n    this.gridOptions = {\n      onCellClicked: (event) => {\n        if (!this.currentSeason) this.currentSeason = 1;\n        switch (event.colDef.field) {\n          case \"january\": {\n            event.data.seasonalityProduct.january = this.currentSeason;\n            break;\n          }\n          case \"february\": {\n            event.data.seasonalityProduct.february = this.currentSeason;\n            break;\n          }\n          case \"march\": {\n            event.data.seasonalityProduct.march = this.currentSeason;\n            break;\n          }\n          case \"april\": {\n            event.data.seasonalityProduct.april = this.currentSeason;\n            break;\n          }\n          case \"may\": {\n            event.data.seasonalityProduct.may = this.currentSeason;\n            break;\n          }\n          case \"june\": {\n            event.data.seasonalityProduct.june = this.currentSeason;\n            break;\n          }\n          case \"july\": {\n            event.data.seasonalityProduct.july = this.currentSeason;\n            break;\n          }\n          case \"august\": {\n            event.data.seasonalityProduct.august = this.currentSeason;\n            break;\n          }\n          case \"september\": {\n            event.data.seasonalityProduct.september = this.currentSeason;\n            break;\n          }\n          case \"october\": {\n            event.data.seasonalityProduct.october = this.currentSeason;\n            break;\n          }\n          case \"november\": {\n            event.data.seasonalityProduct.november = this.currentSeason;\n            break;\n          }\n          case \"december\": {\n            event.data.seasonalityProduct.december = this.currentSeason;\n            break;\n          }\n        }\n        this.save();\n        this.gridOptions.api.redrawRows();\n      },\n    };\n\n    this.columnDefs = [\n      {\n        field: \"name\",\n        width: 300,\n        resizable: true\n        \n      },\n      {\n        \n        field: \"january\",\n        headerName: \"janvier\",\n        cellClass: (params) => {          \n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.january);\n          }\n        },\n      },\n      {\n        field: \"february\",\n        headerName: \"Février\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.february);\n          }\n        },\n      },\n      {\n        field: \"march\",\n        headerName: \"Mars\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.march);\n          }\n        },\n      },\n      {\n        field: \"april\",\n        headerName: \"Avril\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.april);\n          }\n        },\n      },\n      {\n        field: \"may\",\n        headerName: \"Mai\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.may);\n          }\n        },\n      },\n      {\n        field: \"june\",\n        headerName: \"Juin\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.june);\n          }\n        },\n      },\n      {\n        field: \"july\",\n        headerName: \"Juillet\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.july);\n          }\n        },\n      },\n      {\n        field: \"august\",\n        headerName: \"Août\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.august);\n          }\n        },\n      },\n      {\n        field: \"september\",\n        headerName: \"Septembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.september);\n          }\n        },\n      },\n      {\n        field: \"october\",\n        headerName: \"Octobre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.october);\n          }\n        },\n      },\n      {\n        field: \"november\",\n        headerName: \"Novembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.november);\n          }\n        },\n      },\n      {\n        field: \"december\",\n        headerName: \"Décembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null ) {\n            return this.selectColor(params.data.seasonalityProduct.december);\n          }\n        },\n      },\n    ];\n  },\n\n  methods: {\n    async fetchProductList() {\n      await axios\n        .get(\"/products\")\n        .then((response) => (this.products = response.data))\n        .then((rowData) => (this.rowData = rowData));\n    },\n     async fetchSeasonality() {\n     await axios\n        .get(\"/seasons\")\n        .then((response) =>(\n\n          this.seasons = response.data));\n       \n        \n    },\n\n     selectColor(seasonId) {\n   \n  \n      switch (seasonId) {\n        case this.products[0].seasonalities[0] != null && this.products[0].seasonalities[0].id:\n          return \"season1\";\n        case this.products[0].seasonalities[1] != null && this.products[0].seasonalities[1].id:\n          return \"season2\";\n        case this.products[0].seasonalities[2] != null && this.products[0].seasonalities[2].id:\n          return \"season3\";\n       \n       case this.products[0].seasonalities[3] != null && this.products[0].seasonalities[3].id:\n          return \"season4\";\n        case this.products[0].seasonalities[4] != null && this.products[0].seasonalities[4].id:\n          return \"season5\";\n        case this.products[0].seasonalities[5] != null && this.products[0].seasonalities[5].id:\n          return \"season6\";\n        default:\n          return \"season1\";\n      }\n \n    },\n    selectButtonColor(count) {\n      \n      switch (count) {\n        case 0:\n          return \"outline-secondary\";\n        case 1:\n          return \"success\";\n        case 2:\n          return \"info\";\n        case 3:\n          return \"warning\";\n        case 4:\n          return \"danger\";\n        case 5:\n          return \"secondary\";\n        default:\n          return \"outline-secondary\";\n      }\n    },\n    save() {\n      axios.post(\"/products\", this.products);\n    },\n    saveSeasons() {\n      axios.post(\"/seasons\", this.seasons);\n    },\n    editSeasonName(arg) {\n      this.ready = true;\n      this.seasonIndex = arg;\n      this.$root.$emit(\"bv::show::modal\", \"season-name-modal\", \"#btnShow\");\n    },\n     addSeason() {\n       this.$root.$emit(\"bv::show::modal\", \"add-season-modal\", \"#btnShow\");\n    },\n    \n    deleteSeason(){\n\n      axios.delete(\"/seasons/\" + this.seasons[this.seasons.length - 1].id);\n      this.seasons.splice(this.seasons.length - 1, 1);\n\n     \n    }\n  },\n};\n</script>\n<style >\n.season1 {\n  background-color: #fff !important;\n}\n.season2 {\n  background-color: #28a745 !important;\n}\n.season3 {\n  background-color: #17a2b8 !important;\n}\n.season4 {\n  background-color: #ffc107 !important;\n}\n\n.ag-header-group-cell-label,\n.ag-header-cell-label {\n  display: block;\n  align-self: center;\n  overflow: hidden;\n  align-items: center;\n  text-overflow: ellipsis;\n\n  text-align: center;\n}\n\n.ag-theme-alpine .ag-cell,\n.ag-theme-alpine .ag-full-width-row .ag-cell-wrapper.ag-row-group {\n  border: 1px solid transparent;\n\n  padding-left: 3px;\n  padding-right: 0px;\n  -webkit-font-smoothing: subpixel-antialiased;\n  text-align: center;\n}\n\n.btn-success {\n  color: #fff;\n  background-color: #28a745;\n  border-color: #28a745;\n}\n</style>"],"sourceRoot":"src/views"}]}