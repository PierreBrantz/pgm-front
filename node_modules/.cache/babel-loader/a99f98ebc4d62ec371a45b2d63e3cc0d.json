{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js!/home/pan/Dev/maraichage/src/pdfExport/docDefinition.js","dependencies":[{"path":"/home/pan/Dev/maraichage/src/pdfExport/docDefinition.js","mtime":1617115771000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js","mtime":315532800000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9zbGljZWRUb0FycmF5IGZyb20gIi9ob21lL3Bhbi9EZXYvbWFyYWljaGFnZS9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vc2xpY2VkVG9BcnJheSI7CmltcG9ydCBfdG9Db25zdW1hYmxlQXJyYXkgZnJvbSAiL2hvbWUvcGFuL0Rldi9tYXJhaWNoYWdlL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5lbnRyaWVzLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmxpbmsuanMiOwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXREb2NEZWZpbml0aW9uKHByaW50UGFyYW1zLCBhZ0dyaWRBcGksIGFnR3JpZENvbHVtbkFwaSkgewogIHZhciBQREZfSEVBREVSX0NPTE9SID0gcHJpbnRQYXJhbXMuUERGX0hFQURFUl9DT0xPUiwKICAgICAgUERGX0lOTkVSX0JPUkRFUl9DT0xPUiA9IHByaW50UGFyYW1zLlBERl9JTk5FUl9CT1JERVJfQ09MT1IsCiAgICAgIFBERl9PVVRFUl9CT1JERVJfQ09MT1IgPSBwcmludFBhcmFtcy5QREZfT1VURVJfQk9SREVSX0NPTE9SLAogICAgICBQREZfT0REX0JLR19DT0xPUiA9IHByaW50UGFyYW1zLlBERl9PRERfQktHX0NPTE9SLAogICAgICBQREZfRVZFTl9CS0dfQ09MT1IgPSBwcmludFBhcmFtcy5QREZfRVZFTl9CS0dfQ09MT1IsCiAgICAgIFBERl9IRUFERVJfSEVJR0hUID0gcHJpbnRQYXJhbXMuUERGX0hFQURFUl9IRUlHSFQsCiAgICAgIFBERl9ST1dfSEVJR0hUID0gcHJpbnRQYXJhbXMuUERGX1JPV19IRUlHSFQsCiAgICAgIFBERl9QQUdFX09SSVRFTlRBVElPTiA9IHByaW50UGFyYW1zLlBERl9QQUdFX09SSVRFTlRBVElPTiwKICAgICAgUERGX1dJVEhfQ0VMTF9GT1JNQVRUSU5HID0gcHJpbnRQYXJhbXMuUERGX1dJVEhfQ0VMTF9GT1JNQVRUSU5HLAogICAgICBQREZfV0lUSF9DT0xVTU5TX0FTX0xJTktTID0gcHJpbnRQYXJhbXMuUERGX1dJVEhfQ09MVU1OU19BU19MSU5LUywKICAgICAgUERGX1NFTEVDVEVEX1JPV1NfT05MWSA9IHByaW50UGFyYW1zLlBERl9TRUxFQ1RFRF9ST1dTX09OTFksCiAgICAgIFBERl9XSVRIX0hFQURFUl9JTUFHRSA9IHByaW50UGFyYW1zLlBERl9XSVRIX0hFQURFUl9JTUFHRSwKICAgICAgUERGX1dJVEhfRk9PVEVSX1BBR0VfQ09VTlQgPSBwcmludFBhcmFtcy5QREZfV0lUSF9GT09URVJfUEFHRV9DT1VOVCwKICAgICAgUERGX0xPR08gPSBwcmludFBhcmFtcy5QREZfTE9HTzsKICByZXR1cm4gZnVuY3Rpb24gKCkgewogICAgdmFyIGNvbHVtbkdyb3Vwc1RvRXhwb3J0ID0gZ2V0Q29sdW1uR3JvdXBzVG9FeHBvcnQoKTsKICAgIHZhciBjb2x1bW5zVG9FeHBvcnQgPSBnZXRDb2x1bW5zVG9FeHBvcnQoKTsKICAgIHZhciB3aWR0aHMgPSBnZXRFeHBvcnRlZENvbHVtbnNXaWR0aHMoY29sdW1uc1RvRXhwb3J0KTsKICAgIHZhciByb3dzVG9FeHBvcnQgPSBnZXRSb3dzVG9FeHBvcnQoY29sdW1uc1RvRXhwb3J0KTsKICAgIHZhciBib2R5ID0gY29sdW1uR3JvdXBzVG9FeHBvcnQgPyBbY29sdW1uR3JvdXBzVG9FeHBvcnQsIGNvbHVtbnNUb0V4cG9ydF0uY29uY2F0KF90b0NvbnN1bWFibGVBcnJheShyb3dzVG9FeHBvcnQpKSA6IFtjb2x1bW5zVG9FeHBvcnRdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkocm93c1RvRXhwb3J0KSk7CiAgICB2YXIgaGVhZGVyUm93cyA9IGNvbHVtbkdyb3Vwc1RvRXhwb3J0ID8gMiA6IDE7CiAgICB2YXIgaGVhZGVyID0gUERGX1dJVEhfSEVBREVSX0lNQUdFID8gewogICAgICBpbWFnZTogImFnLWdyaWQtbG9nbyIsCiAgICAgIHdpZHRoOiAxNTAsCiAgICAgIGFsaWdubWVudDogImNlbnRlciIsCiAgICAgIG1hcmdpbjogWzAsIDEwLCAwLCAxMF0KICAgIH0gOiBudWxsOwogICAgdmFyIGZvb3RlciA9IFBERl9XSVRIX0ZPT1RFUl9QQUdFX0NPVU5UID8gZnVuY3Rpb24gKGN1cnJlbnRQYWdlLCBwYWdlQ291bnQpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB0ZXh0OiBjdXJyZW50UGFnZS50b1N0cmluZygpICsgIiBvZiAiICsgcGFnZUNvdW50LAogICAgICAgIG1hcmdpbjogWzIwXQogICAgICB9OwogICAgfSA6IG51bGw7CiAgICB2YXIgcGFnZU1hcmdpbnMgPSBbMTAsIFBERl9XSVRIX0hFQURFUl9JTUFHRSA/IDcwIDogMjAsIDEwLCBQREZfV0lUSF9GT09URVJfUEFHRV9DT1VOVCA/IDQwIDogMTBdOwoKICAgIHZhciBoZWlnaHRzID0gZnVuY3Rpb24gaGVpZ2h0cyhyb3dJbmRleCkgewogICAgICByZXR1cm4gcm93SW5kZXggPCBoZWFkZXJSb3dzID8gUERGX0hFQURFUl9IRUlHSFQgOiBQREZfUk9XX0hFSUdIVDsKICAgIH07CgogICAgdmFyIGZpbGxDb2xvciA9IGZ1bmN0aW9uIGZpbGxDb2xvcihyb3dJbmRleCwgbm9kZSwgY29sdW1uSW5kZXgpIHsKICAgICAgaWYgKHJvd0luZGV4IDwgbm9kZS50YWJsZS5oZWFkZXJSb3dzKSB7CiAgICAgICAgcmV0dXJuIFBERl9IRUFERVJfQ09MT1I7CiAgICAgIH0KCiAgICAgIHJldHVybiByb3dJbmRleCAlIDIgPT09IDAgPyBQREZfT0REX0JLR19DT0xPUiA6IFBERl9FVkVOX0JLR19DT0xPUjsKICAgIH07CgogICAgdmFyIGhMaW5lV2lkdGggPSBmdW5jdGlvbiBoTGluZVdpZHRoKGksIG5vZGUpIHsKICAgICAgcmV0dXJuIGkgPT09IDAgfHwgaSA9PT0gbm9kZS50YWJsZS5ib2R5Lmxlbmd0aCA/IDEgOiAxOwogICAgfTsKCiAgICB2YXIgdkxpbmVXaWR0aCA9IGZ1bmN0aW9uIHZMaW5lV2lkdGgoaSwgbm9kZSkgewogICAgICByZXR1cm4gaSA9PT0gMCB8fCBpID09PSBub2RlLnRhYmxlLndpZHRocy5sZW5ndGggPyAxIDogMDsKICAgIH07CgogICAgdmFyIGhMaW5lQ29sb3IgPSBmdW5jdGlvbiBoTGluZUNvbG9yKGksIG5vZGUpIHsKICAgICAgcmV0dXJuIGkgPT09IDAgfHwgaSA9PT0gbm9kZS50YWJsZS5ib2R5Lmxlbmd0aCA/IFBERl9PVVRFUl9CT1JERVJfQ09MT1IgOiBQREZfSU5ORVJfQk9SREVSX0NPTE9SOwogICAgfTsKCiAgICB2YXIgdkxpbmVDb2xvciA9IGZ1bmN0aW9uIHZMaW5lQ29sb3IoaSwgbm9kZSkgewogICAgICByZXR1cm4gaSA9PT0gMCB8fCBpID09PSBub2RlLnRhYmxlLndpZHRocy5sZW5ndGggPyBQREZfT1VURVJfQk9SREVSX0NPTE9SIDogUERGX0lOTkVSX0JPUkRFUl9DT0xPUjsKICAgIH07CgogICAgdmFyIGRvY0RlZmludGlpb24gPSB7CiAgICAgIHBhZ2VPcmllbnRhdGlvbjogUERGX1BBR0VfT1JJVEVOVEFUSU9OLAogICAgICBoZWFkZXI6IGhlYWRlciwKICAgICAgZm9vdGVyOiBmb290ZXIsCiAgICAgIGNvbnRlbnQ6IFt7CiAgICAgICAgc3R5bGU6ICJteVRhYmxlIiwKICAgICAgICB0YWJsZTogewogICAgICAgICAgaGVhZGVyUm93czogaGVhZGVyUm93cywKICAgICAgICAgIHdpZHRoczogd2lkdGhzLAogICAgICAgICAgYm9keTogYm9keSwKICAgICAgICAgIGhlaWdodHM6IGhlaWdodHMKICAgICAgICB9LAogICAgICAgIGxheW91dDogewogICAgICAgICAgZmlsbENvbG9yOiBmaWxsQ29sb3IsCiAgICAgICAgICBoTGluZVdpZHRoOiBoTGluZVdpZHRoLAogICAgICAgICAgdkxpbmVXaWR0aDogdkxpbmVXaWR0aCwKICAgICAgICAgIGhMaW5lQ29sb3I6IGhMaW5lQ29sb3IsCiAgICAgICAgICB2TGluZUNvbG9yOiB2TGluZUNvbG9yCiAgICAgICAgfQogICAgICB9XSwKICAgICAgaW1hZ2VzOiB7CiAgICAgICAgImFnLWdyaWQtbG9nbyI6IFBERl9MT0dPCiAgICAgIH0sCiAgICAgIHN0eWxlczogewogICAgICAgIG15VGFibGU6IHsKICAgICAgICAgIG1hcmdpbjogWzAsIDAsIDAsIDBdCiAgICAgICAgfSwKICAgICAgICB0YWJsZUhlYWRlcjogewogICAgICAgICAgYm9sZDogdHJ1ZSwKICAgICAgICAgIG1hcmdpbjogWzAsIFBERl9IRUFERVJfSEVJR0hUIC8gMywgMCwgMF0KICAgICAgICB9LAogICAgICAgIHRhYmxlQ2VsbDogey8vIG1hcmdpbjogWzAsIDE1LCAwLCAwXQogICAgICAgIH0KICAgICAgfSwKICAgICAgcGFnZU1hcmdpbnM6IHBhZ2VNYXJnaW5zCiAgICB9OwogICAgcmV0dXJuIGRvY0RlZmludGlpb247CiAgfSgpOwoKICBmdW5jdGlvbiBnZXRDb2x1bW5Hcm91cHNUb0V4cG9ydCgpIHsKICAgIHZhciBkaXNwbGF5ZWRDb2x1bW5Hcm91cHMgPSBhZ0dyaWRDb2x1bW5BcGkuZ2V0QWxsRGlzcGxheWVkQ29sdW1uR3JvdXBzKCk7CiAgICB2YXIgaXNDb2x1bW5Hcm91cGluZyA9IGRpc3BsYXllZENvbHVtbkdyb3Vwcy5zb21lKGZ1bmN0aW9uIChjb2wpIHsKICAgICAgcmV0dXJuIGNvbC5oYXNPd25Qcm9wZXJ0eSgiY2hpbGRyZW4iKTsKICAgIH0pOwoKICAgIGlmICghaXNDb2x1bW5Hcm91cGluZykgewogICAgICByZXR1cm4gbnVsbDsKICAgIH0KCiAgICB2YXIgY29sdW1uR3JvdXBzVG9FeHBvcnQgPSBbXTsKICAgIGRpc3BsYXllZENvbHVtbkdyb3Vwcy5mb3JFYWNoKGZ1bmN0aW9uIChjb2xHcm91cCkgewogICAgICB2YXIgaXNDb2xTcGFubmluZyA9IGNvbEdyb3VwLmNoaWxkcmVuLmxlbmd0aCA+IDE7CiAgICAgIHZhciBudW1iZXJPZkVtcHR5SGVhZGVyQ2VsbHNUb0FkZCA9IDA7CgogICAgICBpZiAoaXNDb2xTcGFubmluZykgewogICAgICAgIHZhciBoZWFkZXJDZWxsID0gY3JlYXRlSGVhZGVyQ2VsbChjb2xHcm91cCk7CiAgICAgICAgY29sdW1uR3JvdXBzVG9FeHBvcnQucHVzaChoZWFkZXJDZWxsKTsgLy8gc3VidHJhY3QgMSBhcyB0aGUgY29sdW1uIGdyb3VwIGNvdW50cyBhcyBhIGhlYWRlcgoKICAgICAgICBudW1iZXJPZkVtcHR5SGVhZGVyQ2VsbHNUb0FkZC0tOwogICAgICB9IC8vIGFkZCBhbiBlbXB0eSBoZWFkZXIgY2VsbCBub3cgZm9yIGV2ZXJ5IGNvbHVtbiBiZWluZyBzcGFubmVkCgoKICAgICAgY29sR3JvdXAuZGlzcGxheWVkQ2hpbGRyZW4uZm9yRWFjaChmdW5jdGlvbiAoY2hpbGRDb2wpIHsKICAgICAgICB2YXIgcGRmRXhwb3J0T3B0aW9ucyA9IGdldFBkZkV4cG9ydE9wdGlvbnMoY2hpbGRDb2wuZ2V0Q29sSWQoKSk7CgogICAgICAgIGlmICghcGRmRXhwb3J0T3B0aW9ucyB8fCAhcGRmRXhwb3J0T3B0aW9ucy5za2lwQ29sdW1uKSB7CiAgICAgICAgICBudW1iZXJPZkVtcHR5SGVhZGVyQ2VsbHNUb0FkZCsrOwogICAgICAgIH0KICAgICAgfSk7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG51bWJlck9mRW1wdHlIZWFkZXJDZWxsc1RvQWRkOyBpKyspIHsKICAgICAgICBjb2x1bW5Hcm91cHNUb0V4cG9ydC5wdXNoKHt9KTsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gY29sdW1uR3JvdXBzVG9FeHBvcnQ7CiAgfQoKICBmdW5jdGlvbiBnZXRDb2x1bW5zVG9FeHBvcnQoKSB7CiAgICB2YXIgY29sdW1uc1RvRXhwb3J0ID0gW107CiAgICBhZ0dyaWRDb2x1bW5BcGkuZ2V0QWxsRGlzcGxheWVkQ29sdW1ucygpLmZvckVhY2goZnVuY3Rpb24gKGNvbCkgewogICAgICB2YXIgcGRmRXhwb3J0T3B0aW9ucyA9IGdldFBkZkV4cG9ydE9wdGlvbnMoY29sLmdldENvbElkKCkpOwoKICAgICAgaWYgKHBkZkV4cG9ydE9wdGlvbnMgJiYgcGRmRXhwb3J0T3B0aW9ucy5za2lwQ29sdW1uKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgaGVhZGVyQ2VsbCA9IGNyZWF0ZUhlYWRlckNlbGwoY29sKTsKICAgICAgY29sdW1uc1RvRXhwb3J0LnB1c2goaGVhZGVyQ2VsbCk7CiAgICB9KTsKICAgIHJldHVybiBjb2x1bW5zVG9FeHBvcnQ7CiAgfQoKICBmdW5jdGlvbiBnZXRSb3dzVG9FeHBvcnQoY29sdW1uc1RvRXhwb3J0KSB7CiAgICB2YXIgcm93c1RvRXhwb3J0ID0gW107CiAgICBhZ0dyaWRBcGkuZm9yRWFjaE5vZGVBZnRlckZpbHRlckFuZFNvcnQoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgaWYgKFBERl9TRUxFQ1RFRF9ST1dTX09OTFkgJiYgIW5vZGUuaXNTZWxlY3RlZCgpKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgcm93VG9FeHBvcnQgPSBjb2x1bW5zVG9FeHBvcnQubWFwKGZ1bmN0aW9uIChfcmVmKSB7CiAgICAgICAgdmFyIGNvbElkID0gX3JlZi5jb2xJZDsKICAgICAgICB2YXIgY2VsbFZhbHVlID0gYWdHcmlkQXBpLmdldFZhbHVlKGNvbElkLCBub2RlKTsKICAgICAgICB2YXIgdGFibGVDZWxsID0gY3JlYXRlVGFibGVDZWxsKGNlbGxWYWx1ZSwgY29sSWQpOwogICAgICAgIHJldHVybiB0YWJsZUNlbGw7CiAgICAgIH0pOwogICAgICByb3dzVG9FeHBvcnQucHVzaChyb3dUb0V4cG9ydCk7CiAgICB9KTsKICAgIHJldHVybiByb3dzVG9FeHBvcnQ7CiAgfQoKICBmdW5jdGlvbiBnZXRFeHBvcnRlZENvbHVtbnNXaWR0aHMoY29sdW1uc1RvRXhwb3J0KSB7CiAgICByZXR1cm4gY29sdW1uc1RvRXhwb3J0Lm1hcChmdW5jdGlvbiAoKSB7CiAgICAgIHJldHVybiAxMDAgLyBjb2x1bW5zVG9FeHBvcnQubGVuZ3RoICsgIiUiOwogICAgfSk7CiAgfQoKICBmdW5jdGlvbiBjcmVhdGVIZWFkZXJDZWxsKGNvbCkgewogICAgdmFyIGhlYWRlckNlbGwgPSB7fTsKICAgIHZhciBpc0NvbEdyb3VwID0gY29sLmhhc093blByb3BlcnR5KCJjaGlsZHJlbiIpOwoKICAgIGlmIChpc0NvbEdyb3VwKSB7CiAgICAgIGhlYWRlckNlbGwudGV4dCA9IGNvbC5vcmlnaW5hbENvbHVtbkdyb3VwLmNvbEdyb3VwRGVmLmhlYWRlck5hbWU7CiAgICAgIGhlYWRlckNlbGwuY29sU3BhbiA9IGNvbC5jaGlsZHJlbi5sZW5ndGg7CiAgICAgIGhlYWRlckNlbGwuY29sSWQgPSBjb2wuZ3JvdXBJZDsKICAgIH0gZWxzZSB7CiAgICAgIHZhciBoZWFkZXJOYW1lID0gY29sLmNvbERlZi5oZWFkZXJOYW1lOwoKICAgICAgaWYgKGNvbC5zb3J0KSB7CiAgICAgICAgaGVhZGVyTmFtZSArPSAiICgiLmNvbmNhdChjb2wuc29ydCwgIikiKTsKICAgICAgfQoKICAgICAgaWYgKGNvbC5maWx0ZXJBY3RpdmUpIHsKICAgICAgICBoZWFkZXJOYW1lICs9ICIgW0ZJTFRFUklOR10iOwogICAgICB9CgogICAgICBoZWFkZXJDZWxsLnRleHQgPSBoZWFkZXJOYW1lOwogICAgICBoZWFkZXJDZWxsLmNvbElkID0gY29sLmdldENvbElkKCk7CiAgICB9CgogICAgaGVhZGVyQ2VsbFsic3R5bGUiXSA9ICJ0YWJsZUhlYWRlciI7CiAgICByZXR1cm4gaGVhZGVyQ2VsbDsKICB9CgogIGZ1bmN0aW9uIGNyZWF0ZVRhYmxlQ2VsbChjZWxsVmFsdWUsIGNvbElkKSB7CiAgICB2YXIgdGFibGVDZWxsID0gewogICAgICB0ZXh0OiBjZWxsVmFsdWUgIT09IHVuZGVmaW5lZCA/IGNlbGxWYWx1ZSA6ICIiLAogICAgICAvLyBub1dyYXA6IFBERl9QQUdFX09SSVRFTlRBVElPTiA9PT0gImxhbmRzY2FwZSIsCiAgICAgIHN0eWxlOiAidGFibGVDZWxsIgogICAgfTsKICAgIHZhciBwZGZFeHBvcnRPcHRpb25zID0gZ2V0UGRmRXhwb3J0T3B0aW9ucyhjb2xJZCk7CgogICAgaWYgKHBkZkV4cG9ydE9wdGlvbnMpIHsKICAgICAgdmFyIHN0eWxlcyA9IHBkZkV4cG9ydE9wdGlvbnMuc3R5bGVzLAogICAgICAgICAgY3JlYXRlVVJMID0gcGRmRXhwb3J0T3B0aW9ucy5jcmVhdGVVUkw7CgogICAgICBpZiAoUERGX1dJVEhfQ0VMTF9GT1JNQVRUSU5HICYmIHN0eWxlcykgewogICAgICAgIE9iamVjdC5lbnRyaWVzKHN0eWxlcykuZm9yRWFjaChmdW5jdGlvbiAoX3JlZjIpIHsKICAgICAgICAgIHZhciBfcmVmMyA9IF9zbGljZWRUb0FycmF5KF9yZWYyLCAyKSwKICAgICAgICAgICAgICBrZXkgPSBfcmVmM1swXSwKICAgICAgICAgICAgICB2YWx1ZSA9IF9yZWYzWzFdOwoKICAgICAgICAgIHJldHVybiB0YWJsZUNlbGxba2V5XSA9IHZhbHVlOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAoUERGX1dJVEhfQ09MVU1OU19BU19MSU5LUyAmJiBjcmVhdGVVUkwpIHsKICAgICAgICB0YWJsZUNlbGxbImxpbmsiXSA9IGNyZWF0ZVVSTChjZWxsVmFsdWUpOwogICAgICAgIHRhYmxlQ2VsbFsiY29sb3IiXSA9ICJibHVlIjsKICAgICAgICB0YWJsZUNlbGxbImRlY29yYXRpb24iXSA9ICJ1bmRlcmxpbmUiOwogICAgICB9CiAgICB9CgogICAgcmV0dXJuIHRhYmxlQ2VsbDsKICB9CgogIGZ1bmN0aW9uIGdldFBkZkV4cG9ydE9wdGlvbnMoY29sSWQpIHsKICAgIHZhciBjb2wgPSBhZ0dyaWRDb2x1bW5BcGkuZ2V0Q29sdW1uKGNvbElkKTsKICAgIHJldHVybiBjb2wuY29sRGVmLnBkZkV4cG9ydE9wdGlvbnM7CiAgfQp9"},{"version":3,"sources":["/home/pan/Dev/maraichage/src/pdfExport/docDefinition.js"],"names":["getDocDefinition","printParams","agGridApi","agGridColumnApi","PDF_HEADER_COLOR","PDF_INNER_BORDER_COLOR","PDF_OUTER_BORDER_COLOR","PDF_ODD_BKG_COLOR","PDF_EVEN_BKG_COLOR","PDF_HEADER_HEIGHT","PDF_ROW_HEIGHT","PDF_PAGE_ORITENTATION","PDF_WITH_CELL_FORMATTING","PDF_WITH_COLUMNS_AS_LINKS","PDF_SELECTED_ROWS_ONLY","PDF_WITH_HEADER_IMAGE","PDF_WITH_FOOTER_PAGE_COUNT","PDF_LOGO","columnGroupsToExport","getColumnGroupsToExport","columnsToExport","getColumnsToExport","widths","getExportedColumnsWidths","rowsToExport","getRowsToExport","body","headerRows","header","image","width","alignment","margin","footer","currentPage","pageCount","text","toString","pageMargins","heights","rowIndex","fillColor","node","columnIndex","table","hLineWidth","i","length","vLineWidth","hLineColor","vLineColor","docDefintiion","pageOrientation","content","style","layout","images","styles","myTable","tableHeader","bold","tableCell","displayedColumnGroups","getAllDisplayedColumnGroups","isColumnGrouping","some","col","hasOwnProperty","forEach","colGroup","isColSpanning","children","numberOfEmptyHeaderCellsToAdd","headerCell","createHeaderCell","push","displayedChildren","childCol","pdfExportOptions","getPdfExportOptions","getColId","skipColumn","getAllDisplayedColumns","forEachNodeAfterFilterAndSort","isSelected","rowToExport","map","colId","cellValue","getValue","createTableCell","isColGroup","originalColumnGroup","colGroupDef","headerName","colSpan","groupId","colDef","sort","filterActive","undefined","createURL","Object","entries","key","value","getColumn"],"mappings":"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","sourcesContent":["export default function getDocDefinition(\n  printParams,\n  agGridApi,\n  agGridColumnApi\n) {\n  const {\n    PDF_HEADER_COLOR,\n    PDF_INNER_BORDER_COLOR,\n    PDF_OUTER_BORDER_COLOR,\n    PDF_ODD_BKG_COLOR,\n    PDF_EVEN_BKG_COLOR,\n    PDF_HEADER_HEIGHT,\n    PDF_ROW_HEIGHT,\n    PDF_PAGE_ORITENTATION,\n    PDF_WITH_CELL_FORMATTING,\n    PDF_WITH_COLUMNS_AS_LINKS,\n    PDF_SELECTED_ROWS_ONLY,\n    PDF_WITH_HEADER_IMAGE,\n    PDF_WITH_FOOTER_PAGE_COUNT,\n    PDF_LOGO\n  } = printParams;\n\n  return (function() {\n    const columnGroupsToExport = getColumnGroupsToExport();\n\n    const columnsToExport = getColumnsToExport();\n\n    const widths = getExportedColumnsWidths(columnsToExport);\n\n    const rowsToExport = getRowsToExport(columnsToExport);\n\n    const body = columnGroupsToExport\n      ? [columnGroupsToExport, columnsToExport, ...rowsToExport]\n      : [columnsToExport, ...rowsToExport];\n\n    const headerRows = columnGroupsToExport ? 2 : 1;\n\n    const header = PDF_WITH_HEADER_IMAGE\n      ? {\n          image: \"ag-grid-logo\",\n          width: 150,\n          alignment: \"center\",\n          margin: [0, 10, 0, 10]\n        }\n      : null;\n\n    const footer = PDF_WITH_FOOTER_PAGE_COUNT\n      ? function(currentPage, pageCount) {\n          return {\n            text: currentPage.toString() + \" of \" + pageCount,\n            margin: [20]\n          };\n        }\n      : null;\n\n    const pageMargins = [\n      10,\n      PDF_WITH_HEADER_IMAGE ? 70 : 20,\n      10,\n      PDF_WITH_FOOTER_PAGE_COUNT ? 40 : 10\n    ];\n\n    const heights = rowIndex =>\n      rowIndex < headerRows ? PDF_HEADER_HEIGHT : PDF_ROW_HEIGHT;\n\n    const fillColor = (rowIndex, node, columnIndex) => {\n      if (rowIndex < node.table.headerRows) {\n        return PDF_HEADER_COLOR;\n      }\n      return rowIndex % 2 === 0 ? PDF_ODD_BKG_COLOR : PDF_EVEN_BKG_COLOR;\n    };\n\n    const hLineWidth = (i, node) =>\n      i === 0 || i === node.table.body.length ? 1 : 1;\n\n    const vLineWidth = (i, node) =>\n      i === 0 || i === node.table.widths.length ? 1 : 0;\n\n    const hLineColor = (i, node) =>\n      i === 0 || i === node.table.body.length\n        ? PDF_OUTER_BORDER_COLOR\n        : PDF_INNER_BORDER_COLOR;\n\n    const vLineColor = (i, node) =>\n      i === 0 || i === node.table.widths.length\n        ? PDF_OUTER_BORDER_COLOR\n        : PDF_INNER_BORDER_COLOR;\n\n    const docDefintiion = {\n      pageOrientation: PDF_PAGE_ORITENTATION,\n      header,\n      footer,\n      content: [\n        {\n          style: \"myTable\",\n          table: {\n            headerRows,\n            widths,\n            body,\n            heights\n          },\n          layout: {\n            fillColor,\n            hLineWidth,\n            vLineWidth,\n            hLineColor,\n            vLineColor\n          }\n        }\n      ],\n      images: {\n        \"ag-grid-logo\": PDF_LOGO\n      },\n      styles: {\n        myTable: {\n          margin: [0, 0, 0, 0]\n        },\n        tableHeader: {\n          bold: true,\n          margin: [0, PDF_HEADER_HEIGHT / 3, 0, 0]\n        },\n        tableCell: {\n          // margin: [0, 15, 0, 0]\n        }\n      },\n      pageMargins\n    };\n\n    return docDefintiion;\n  })();\n\n  function getColumnGroupsToExport() {\n    let displayedColumnGroups = agGridColumnApi.getAllDisplayedColumnGroups();\n\n    let isColumnGrouping = displayedColumnGroups.some(col =>\n      col.hasOwnProperty(\"children\")\n    );\n\n    if (!isColumnGrouping) {\n      return null;\n    }\n\n    let columnGroupsToExport = [];\n\n    displayedColumnGroups.forEach(colGroup => {\n      let isColSpanning = colGroup.children.length > 1;\n      let numberOfEmptyHeaderCellsToAdd = 0;\n\n      if (isColSpanning) {\n        let headerCell = createHeaderCell(colGroup);\n        columnGroupsToExport.push(headerCell);\n        // subtract 1 as the column group counts as a header\n        numberOfEmptyHeaderCellsToAdd--;\n      }\n\n      // add an empty header cell now for every column being spanned\n      colGroup.displayedChildren.forEach(childCol => {\n        let pdfExportOptions = getPdfExportOptions(childCol.getColId());\n        if (!pdfExportOptions || !pdfExportOptions.skipColumn) {\n          numberOfEmptyHeaderCellsToAdd++;\n        }\n      });\n\n      for (let i = 0; i < numberOfEmptyHeaderCellsToAdd; i++) {\n        columnGroupsToExport.push({});\n      }\n    });\n\n    return columnGroupsToExport;\n  }\n\n  function getColumnsToExport() {\n    let columnsToExport = [];\n\n    agGridColumnApi.getAllDisplayedColumns().forEach(col => {\n      let pdfExportOptions = getPdfExportOptions(col.getColId());\n      if (pdfExportOptions && pdfExportOptions.skipColumn) {\n        return;\n      }\n      let headerCell = createHeaderCell(col);\n      columnsToExport.push(headerCell);\n    });\n\n    return columnsToExport;\n  }\n\n  function getRowsToExport(columnsToExport) {\n    let rowsToExport = [];\n\n    agGridApi.forEachNodeAfterFilterAndSort(node => {\n      if (PDF_SELECTED_ROWS_ONLY && !node.isSelected()) {\n        return;\n      }\n      let rowToExport = columnsToExport.map(({ colId }) => {\n        let cellValue = agGridApi.getValue(colId, node);\n        let tableCell = createTableCell(cellValue, colId);\n        return tableCell;\n      });\n      rowsToExport.push(rowToExport);\n    });\n\n    return rowsToExport;\n  }\n\n  function getExportedColumnsWidths(columnsToExport) {\n    return columnsToExport.map(() => 100 / columnsToExport.length + \"%\");\n  }\n\n  function createHeaderCell(col) {\n    let headerCell = {};\n\n    let isColGroup = col.hasOwnProperty(\"children\");\n\n    if (isColGroup) {\n      headerCell.text = col.originalColumnGroup.colGroupDef.headerName;\n      headerCell.colSpan = col.children.length;\n      headerCell.colId = col.groupId;\n    } else {\n      let headerName = col.colDef.headerName;\n\n      if (col.sort) {\n        headerName += ` (${col.sort})`;\n      }\n      if (col.filterActive) {\n        headerName += ` [FILTERING]`;\n      }\n\n      headerCell.text = headerName;\n      headerCell.colId = col.getColId();\n    }\n\n    headerCell[\"style\"] = \"tableHeader\";\n\n    return headerCell;\n  }\n\n  function createTableCell(cellValue, colId) {\n    const tableCell = {\n      text: cellValue !== undefined ? cellValue : \"\",\n      // noWrap: PDF_PAGE_ORITENTATION === \"landscape\",\n      style: \"tableCell\"\n    };\n\n    const pdfExportOptions = getPdfExportOptions(colId);\n\n    if (pdfExportOptions) {\n      const { styles, createURL } = pdfExportOptions;\n\n      if (PDF_WITH_CELL_FORMATTING && styles) {\n        Object.entries(styles).forEach(\n          ([key, value]) => (tableCell[key] = value)\n        );\n      }\n\n      if (PDF_WITH_COLUMNS_AS_LINKS && createURL) {\n        tableCell[\"link\"] = createURL(cellValue);\n        tableCell[\"color\"] = \"blue\";\n        tableCell[\"decoration\"] = \"underline\";\n      }\n    }\n\n    return tableCell;\n  }\n\n  function getPdfExportOptions(colId) {\n    let col = agGridColumnApi.getColumn(colId);\n    return col.colDef.pdfExportOptions;\n  }\n}\n"]}]}