{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/thread-loader/dist/cjs.js!/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js!/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Theoretical.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Theoretical.vue","mtime":1644504909302},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Theoretical.vue"],"names":[],"mappings":"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","sourcesContent":["<template >\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div style=\"flex: 1 1 auto\">\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%\"\n        class=\"ag-theme-alpine\"\n        id=\"myGrid\"\n        :gridOptions=\"gridOptions\"\n        :rowData=\"rowData\"\n        :columnDefs=\"columnDefs\"\n        :modules=\"modules\"\n        :headerHeight=\"headerHeight\"\n      ></ag-grid-vue>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { AgGridVue } from \"@ag-grid-community/vue\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport axios from \"axios\";\n\nconst THEORETICAL_QUANTITY_COLOR = \"#15b3d629\";\nconst TOTAL_THEO_COLOR = \"#d9ffc6b8\";\nconst TOTAL_REAL_COLOR = \"#ffe09bb8\";\n\nexport default {\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      rowData: null,\n      columnDefs: null,\n      modules: AllCommunityModules,\n      headerHeight: null,\n      products: []\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    }\n  },\n\n\n  components: {\n    AgGridVue,\n  },\n  methods: {\n    onGridReady(params) {\n      params.api.sizeColumnsToFit();\n      window.addEventListener(\"resize\", function () {\n        setTimeout(function () {\n          params.api.sizeColumnsToFit();\n        });\n      });\n\n      params.api.sizeColumnsToFit();\n    },\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n   // this.gridApi.sizeColumnsToFit();\n  },\n  beforeMount() {\n    this.headerHeight = 20;\n    this.gridOptions = {\n      onCellValueChanged: function (event) {\n        const json =\n          axios\n        .post(\n          \"/products\" ,\n            [event.data]\n        )\n          \n          .then((response) => (this.requests = response.data));\n         \n      },\n    };\n    this.columnDefs = [\n      {\n        headerName: \"Légumes\",\n        field: \"name\",\n        width: 150,\n        sortable: true,\n        pinned: \"left\",\n        resizable: true\n      },\n      {\n        headerName: \"Condit#\",\n        width: 60,\n        pinned: \"left\",\n        resizable: true,\n\n        valueGetter: function (params) {\n          if (params.data.packaging && params.data.packaging.name) {\n            return params.data.packaging.name;\n          }\n        },\n      },\n      {\n        headerName: \"Prix\",\n        resizable: true,\n        valueGetter: function (params) {\n          if (params.data.price) {\n            return params.data.price + \"€\";\n          }\n        },\n        width: 60,\n        pinned: \"left\",\n      },\n    \n  {\n        headerName: \"Janvier\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        valueParser: numberParser,\n        resizable: true,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0]) {\n            return params.data.quantities[0].quantity1;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.quantities[0] === \"undefined\") {\n              params.data.quantities[0] = {\n                id: params.data.id,\n                quantity1: newValInt,\n              };\n            } else {\n              params.data.quantities[0].quantity1 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity1;\n            }\n            return sum;\n          }\n        },\n        width: 60,\n      }]},\n      {\n        headerName: \"Février\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity2;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.quantities[0] === \"undefined\") {\n              params.data.quantities[0] = {\n                id: params.data.id,\n                quantity2: newValInt,\n              };\n            } else {\n              params.data.quantities[0].quantity2 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        \n        headerName: \"Réel\",\n        editable: false,\n        valueParser: numberParser,\n        resizable: true,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity2;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Mars\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity3;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity3: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity3 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        \n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity3;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Avril\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity4;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity4: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity4 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity4;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Mai\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity5;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity5: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity5 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity5;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Juin\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable:true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity6;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity6: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity6 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity6;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Juillet\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity7;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity7: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity7 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        \n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity7;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Août\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity8;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity8: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity8 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        \n        headerName: \"Réel\",\n        editable: false,\n        resizable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity8;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        headerName: \"Septembre\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity9;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity9: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity9 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        \n        headerName: \"Réel\",\n        editable: false,\n        resizable:true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity9;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {headerName: \"Octobre\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity10;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity10: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity10 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable:true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity10;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      ,\n      {headerName: \"Novembre\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity11;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity11: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity11 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable:true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity11;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      ,\n      {headerName: \"Décembre\",\n        children:[{\n        headerName: \"Théo.\",\n        editable: true,\n        resizable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity12;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity12: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity12 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 60,\n      },\n      {\n        headerName: \"Réel\",\n        editable: false,\n        resizable:true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity12;\n            }\n            return sum;\n          }\n        },\n\n        width: 60,\n      }]},\n      {\n        \n        headerName: \"Qte. Totale\",\n        marryChildren:true,\n        children:[{\n            headerName: 'Théo.',\n        width: 70,\n        pinned: \"right\",\n        resizable: true,\n        cellStyle: { \"background-color\": TOTAL_THEO_COLOR },\n         valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.quantities.length; i++) {\n            sum +=\n              (params.data.quantities[i].quantity1 || 0) +\n              (params.data.quantities[i].quantity2 || 0) +\n              (params.data.quantities[i].quantity3  || 0) +\n              (params.data.quantities[i].quantity4  || 0) +\n              (params.data.quantities[i].quantity5 | 0) +\n              (params.data.quantities[i].quantity6 || 0) +\n              (params.data.quantities[i].quantity7 || 0) +\n              (params.data.quantities[i].quantity8 || 0) +\n              (params.data.quantities[i].quantity9 || 0) +\n              (params.data.quantities[i].quantity10 || 0) +\n              (params.data.quantities[i].quantity11  || 0) +\n              (params.data.quantities[i].quantity12  || 0);\n              \n          }          \n            return sum ;\n        }\n      },\n      {\n        headerName: \"Réel\",\n        width: 70,\n        pinned: \"right\",\n        resizable: true,\n        cellStyle: { \"background-color\": TOTAL_REAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              params.data.realQuantities[i].quantity1 +\n              params.data.realQuantities[i].quantity2 +\n              params.data.realQuantities[i].quantity3 +\n              params.data.realQuantities[i].quantity4 +\n              params.data.realQuantities[i].quantity5 +\n              params.data.realQuantities[i].quantity6 +\n              params.data.realQuantities[i].quantity7 +\n              params.data.realQuantities[i].quantity8 +\n              params.data.realQuantities[i].quantity9 +\n              params.data.realQuantities[i].quantity10 +\n              params.data.realQuantities[i].quantity11 +\n              params.data.realQuantities[i].quantity12;\n          }\n         \n            return sum ;\n        },\n      }]},\n\n      {\n        headerName: \"Prix Total\",\n         marryChildren:true,\n        children:[{\n        headerName: \"Théo.\",\n        pinned: \"right\",\n        resizable: true,\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_THEO_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.quantities.length; i++) {\n            sum +=\n              (params.data.quantities[i].quantity1 * params.data.price * params.data.seasonalityProduct.january || 0) +\n              (params.data.quantities[i].quantity2 * params.data.price * params.data.seasonalityProduct.february || 0) +\n              (params.data.quantities[i].quantity3 * params.data.price * params.data.seasonalityProduct.march || 0) +\n              (params.data.quantities[i].quantity4 * params.data.price * params.data.seasonalityProduct.april || 0) +\n              (params.data.quantities[i].quantity5 * params.data.price * params.data.seasonalityProduct.may || 0) +\n              (params.data.quantities[i].quantity6 * params.data.price * params.data.seasonalityProduct.june || 0) +\n              (params.data.quantities[i].quantity7 * params.data.price * params.data.seasonalityProduct.july || 0) +\n              (params.data.quantities[i].quantity8 * params.data.price * params.data.seasonalityProduct.august || 0) +\n              (params.data.quantities[i].quantity9 * params.data.price * params.data.seasonalityProduct.september || 0) +\n              (params.data.quantities[i].quantity10 * params.data.price * params.data.seasonalityProduct.october || 0) +\n              (params.data.quantities[i].quantity11 * params.data.price * params.data.seasonalityProduct.november || 0) +\n              (params.data.quantities[i].quantity12 * params.data.price * params.data.seasonalityProduct.december || 0);\n          }\n          \n            return sum.toFixed(2)  + '€';\n        }\n      },\n      {\n    \n        headerName: \"Réel\",\n        width: 70,\n        pinned: \"right\",\n        resizable: true,\n        cellStyle: { \"background-color\": TOTAL_REAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              (params.data.realQuantities[i].quantity1 * params.data.price * params.data.seasonalityProduct.january || 0) +\n              (params.data.realQuantities[i].quantity2 * params.data.price * params.data.seasonalityProduct.february || 0) +\n              (params.data.realQuantities[i].quantity3 * params.data.price * params.data.seasonalityProduct.march || 0) +\n              (params.data.realQuantities[i].quantity4 * params.data.price * params.data.seasonalityProduct.april || 0) +\n              (params.data.realQuantities[i].quantity5 * params.data.price * params.data.seasonalityProduct.may || 0) +\n              (params.data.realQuantities[i].quantity6 * params.data.price * params.data.seasonalityProduct.june || 0) +\n              (params.data.realQuantities[i].quantity7 * params.data.price * params.data.seasonalityProduct.july || 0) +\n              (params.data.realQuantities[i].quantity8 * params.data.price * params.data.seasonalityProduct.august || 0) +\n              (params.data.realQuantities[i].quantity9 * params.data.price * params.data.seasonalityProduct.september || 0) +\n              (params.data.realQuantities[i].quantity10 * params.data.price * params.data.seasonalityProduct.october || 0) +\n              (params.data.realQuantities[i].quantity11 * params.data.price * params.data.seasonalityProduct.november || 0) +\n              (params.data.realQuantities[i].quantity12 * params.data.price * params.data.seasonalityProduct.december || 0) ;\n          }\n          \n            return sum.toFixed(2)  + '€';\n        }\n      }]},\n    ],\n \n     axios\n      .get(\"/products\")\n      .then((response) => (this.products = response.data))\n      .then((rowData) => (this.rowData = rowData));\n      \n  },\n};\nwindow.numberParser = function numberParser(params) {\n  return Number(params.newValue);\n};\n</script>\n \n<style >\n.ag-theme-alpine .ag-header-cell,\n.ag-theme-alpine .ag-header-group-cell {\n  margin-left: 5px;\n  padding-left: 5px;\n  padding-right: 3px;\n}\n\n.ag-theme-alpine .ag-cell,\n.ag-theme-alpine .ag-full-width-row .ag-cell-wrapper.ag-row-group {\n  margin-left: 0px;\n  padding-left: 5px;\n  padding-right: 3px;\n}\n\n</style>\n"],"sourceRoot":"src/views"}]}