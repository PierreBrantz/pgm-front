{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js!/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Product.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Product.vue","mtime":1634746926720},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Product.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container>\n      <b-row>\n        <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProduct\"\n            :options=\"productList\"\n            v-on:change=\"changeProduct\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n        <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProducer\"\n            :options=\"producers\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n\n        <b-col cols=\"2\">\n          <b-button\n            variant=\"outline-primary\"\n            @click=\"addProducerClick\"\n            class=\"m-2\"\n            >Associer Producteur</b-button\n          >\n          <!--\n          <b-button variant=\"outline-primary\" @click=\"share\" class=\"m-2\"\n            >Répartir</b-button\n          >\n          -->\n        </b-col>\n        <b-col cols=\"3\"> </b-col>\n      </b-row>\n\n      <div id=\"titleId\">\n        <b-row v-if=\"product != null\">{{ product.name }}</b-row>\n        <b-row v-if=\"product != null\">{{\n          \"Packaging: \" + product.packaging.name\n        }}</b-row>\n      </div>\n      <br />\n      <b-row>\n        <div>\n          <b-table\n            striped\n            hover\n            bordered\n            fixed\n            head-variant=\"dark\"\n            :items=\"items\"\n            :fields=\"fields\"\n            @input-change=\"handleInput\"\n          >\n            <template #table-colgroup=\"scope\">\n              <col\n                v-for=\"field in scope.fields\"\n                :key=\"field.key\"\n                :style=\"{ width: '1.5rem' }\"\n              />\n            </template>\n          </b-table></div\n      ></b-row>\n\n      <b-row v-if=\"items2.length > 0\" id=\"producerFieldId\">Producteurs</b-row>\n\n      <b-row>\n        <div>\n          <b-editable-table\n            striped\n            hover\n            bordered\n            fixed\n            head-variant=\"dark\"\n            :items=\"items2\"\n            :fields=\"fields2\"\n            thead-class=\"d-none\"\n            @input-change=\"handleInput\"\n          >\n            <template #table-colgroup=\"scope\">\n              <col\n                v-for=\"field in scope.fields2\"\n                :key=\"field.key\"\n                :style=\"{ width: '1.5rem', padding: '0px' }\"\n              />\n            </template>\n\n            <template v-slot:cell(action)=\"{ item }\">\n              <div v-if=\"item.id >= 0\">\n                <b-icon\n                  v-if=\"userRow.length > 0 && userRow[0].id === item.id\"\n                  @click=\"saveEdit(item)\"\n                  icon=\"check-square\"\n                  scale=\"1.3\"\n                  aria-hidden=\"true\"\n                  variant=\"success\"\n                ></b-icon>\n\n                <b-icon\n                  v-else\n                  @click=\"deleteProduct(item)\"\n                  variant=\"danger\"\n                  icon=\"trash\"\n                  scale=\"1.3\"\n                  aria-hidden=\"true\"\n                ></b-icon>\n              </div>\n            </template>\n          </b-editable-table></div\n      ></b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport BEditableTable from \"bootstrap-vue-editable-table\";\n\nconst TOTAL_COLOR = \"#ccffb3\";\n\nexport default {\n  data() {\n    return {\n      selectedProducer: null,\n      selectedProduct: null,\n      producers: [{ value: null, text: \"Choisir un producteur...\" }],\n      productList: [{ value: null, text: \"Choisir un produit...\" }],\n      product: null,\n      items: [],\n      fields: [],\n      items2: [],\n      fields2: [],\n      selectedRow: {},\n      selectedCell: null,\n      saveButtonDisplay: false,\n      userRow: [],\n    };\n  },\n  components: { BEditableTable },\n  mounted() {\n    this.fetchProducers();\n    this.fetchProductList();\n  },\n  computed: {\n    editableFields() {\n      return this.fields.filter((field) => {\n        return field.editable === true;\n      });\n    },\n  },\n  methods: {\n    async fetchProducers() {\n      const json = await axios\n        .get(\"/producers\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.producers.push({ value: element.id, text: element.abr })\n      );\n    },\n\n    async fetchProductList() {\n      const json = await axios\n        .get(\"/products\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.productList.push({ value: element.id, text: element.name })\n      );\n    },\n    async changeProduct(arg) {\n      const json = await axios\n        .get(\"/products/\" + arg)\n        .then((response) => (this.requests = response.data));\n      this.product = json[0];\n      this.items2 = [];\n      this.fields2 = [];\n      this.items = [\n        {\n          col1: \"Théo.\",\n          Janvier: this.product.quantities[0].quantity1,\n          Février: this.product.quantities[0].quantity2,\n          Mars: this.product.quantities[0].quantity3,\n          Avril: this.product.quantities[0].quantity4,\n          Mai: this.product.quantities[0].quantity5,\n          Juin: this.product.quantities[0].quantity6,\n          Juillet: this.product.quantities[0].quantity7,\n          Août: this.product.quantities[0].quantity8,\n          Septembre: this.product.quantities[0].quantity9,\n          Octobre: this.product.quantities[0].quantity10,\n          Novembre: this.product.quantities[0].quantity11,\n          Décembre: this.product.quantities[0].quantity12,\n        },\n        {\n          col1: \"Diff.\",\n          Janvier:\n            this.computeTotalQuantityForAMonth(1) -\n            this.product.quantities[0].quantity1,\n          Février:\n            this.computeTotalQuantityForAMonth(2) -\n            this.product.quantities[0].quantity2,\n          Mars:\n            this.computeTotalQuantityForAMonth(3) -\n            this.product.quantities[0].quantity3,\n          Avril:\n            this.computeTotalQuantityForAMonth(4) -\n            this.product.quantities[0].quantity4,\n          Mai:\n            this.computeTotalQuantityForAMonth(5) -\n            this.product.quantities[0].quantity5,\n          Juin:\n            this.computeTotalQuantityForAMonth(6) -\n            this.product.quantities[0].quantity6,\n          Juillet:\n            this.computeTotalQuantityForAMonth(7) -\n            this.product.quantities[0].quantity7,\n          Août:\n            this.computeTotalQuantityForAMonth(8) -\n            this.product.quantities[0].quantity8,\n          Septembre:\n            this.computeTotalQuantityForAMonth(9) -\n            this.product.quantities[0].quantity9,\n          Octobre:\n            this.computeTotalQuantityForAMonth(10) -\n            this.product.quantities[0].quantity10,\n          Novembre:\n            this.computeTotalQuantityForAMonth(11) -\n            this.product.quantities[0].quantity11,\n          Décembre:\n            this.computeTotalQuantityForAMonth(12) -\n            this.product.quantities[0].quantity12,\n          _cellVariants: this.computeColor(),\n        },\n        {\n          col1: \"Prix\",\n          Janvier: this.product.price * this.product.seasons[0],\n          Février: this.product.price * this.product.seasons[1],\n          Mars: this.product.price * this.product.seasons[2],\n          Avril: this.product.price * this.product.seasons[3],\n          Mai: this.product.price * this.product.seasons[4],\n          Juin: this.product.price * this.product.seasons[5],\n          Juillet: this.product.price * this.product.seasons[6],\n          Août: this.product.price * this.product.seasons[7],\n          Septembre: this.product.price * this.product.seasons[8],\n          Octobre: this.product.price * this.product.seasons[9],\n          Novembre: this.product.price * this.product.seasons[10],\n          Décembre: this.product.price * this.product.seasons[11],\n        },\n      ];\n\n      for (let index = 0; index < this.product.producers.length; index++) {\n        let q1 = 0,\n          q2 = 0,\n          q3 = 0,\n          q4 = 0,\n          q5 = 0,\n          q6 = 0,\n          q7 = 0,\n          q8 = 0,\n          q9 = 0,\n          q10 = 0,\n          q11 = 0,\n          q12 = 0;\n        if (this.product.producers[index].realQuantities.length > 0) {\n          q1 =\n            this.product.producers[index].realQuantities[0].quantity1 > 0\n              ? this.product.producers[index].realQuantities[0].quantity1\n              : 0;\n          q2 =\n            this.product.producers[index].realQuantities[0].quantity2 > 0\n              ? this.product.producers[index].realQuantities[0].quantity2\n              : 0;\n          q3 =\n            this.product.producers[index].realQuantities[0].quantity3 > 0\n              ? this.product.producers[index].realQuantities[0].quantity3\n              : 0;\n          q4 =\n            this.product.producers[index].realQuantities[0].quantity4 > 0\n              ? this.product.producers[index].realQuantities[0].quantity4\n              : 0;\n          q5 =\n            this.product.producers[index].realQuantities[0].quantity5 > 0\n              ? this.product.producers[index].realQuantities[0].quantity5\n              : 0;\n          q6 =\n            this.product.producers[index].realQuantities[0].quantity6 > 0\n              ? this.product.producers[index].realQuantities[0].quantity6\n              : 0;\n          q7 =\n            this.product.producers[index].realQuantities[0].quantity7 > 0\n              ? this.product.producers[index].realQuantities[0].quantity7\n              : 0;\n          q8 =\n            this.product.producers[index].realQuantities[0].quantity8 > 0\n              ? this.product.producers[index].realQuantities[0].quantity8\n              : 0;\n          q9 =\n            this.product.producers[index].realQuantities[0].quantity9 > 0\n              ? this.product.producers[index].realQuantities[0].quantity9\n              : 0;\n          q10 =\n            this.product.producers[index].realQuantities[0].quantity10 > 0\n              ? this.product.producers[index].realQuantities[0].quantity10\n              : 0;\n          q11 =\n            this.product.producers[index].realQuantities[0].quantity11 > 0\n              ? this.product.producers[index].realQuantities[0].quantity11\n              : 0;\n          q12 =\n            this.product.producers[index].realQuantities[0].quantity12 > 0\n              ? this.product.producers[index].realQuantities[0].quantity12\n              : 0;\n        }\n        this.items2.push({\n          id: index,\n          col1: this.product.producers[index].abr,\n          Janvier: q1,\n          Février: q2,\n          Mars: q3,\n          Avril: q4,\n          Mai: q5,\n          Juin: q6,\n          Juillet: q7,\n          Août: q8,\n          Septembre: q9,\n          Octobre: q10,\n          Novembre: q11,\n          Décembre: q12,\n        });\n      }\n\n      this.fields = [\n        { key: \"col1\", label: \"\", variant: \"dark\" },\n        { key: \"Janvier\", label: \"Jan.\", type: \"number\", editable: true },\n        { key: \"Février\", label: \"Fév.\", type: \"number\", editable: true },\n        { key: \"Mars\", label: \"Mars\", type: \"number\", editable: true },\n        { key: \"Avril\", label: \"Avril\", type: \"number\", editable: true },\n        { key: \"Mai\", label: \"Mai\", type: \"number\", editable: true },\n        { key: \"Juin\", label: \"Juin\", type: \"number\", editable: true },\n        { key: \"Juillet\", label: \"Juill.\", type: \"number\", editable: true },\n        { key: \"Août\", label: \"Août\", type: \"number\", editable: true },\n        {\n          key: \"Septembre\",\n          label: \"Sept.\",\n          type: \"number\",\n          editable: true,\n        },\n        { key: \"Octobre\", label: \"Oct.\", type: \"number\", editable: true },\n        { key: \"Novembre\", label: \"Nov.\", type: \"number\", editable: true },\n        { key: \"Décembre\", label: \"Déc.\", type: \"number\", editable: true },\n        { key: \"action\" },\n      ];\n\n      this.fields2 = [\n        { key: \"col1\", label: \"\", variant: \"dark\" },\n        { key: \"Janvier\", label: \"Janvier\", type: \"number\", editable: true },\n        { key: \"Février\", label: \"Février\", type: \"number\", editable: true },\n        { key: \"Mars\", label: \"Mars\", type: \"number\", editable: true },\n        { key: \"Avril\", label: \"Avril\", type: \"number\", editable: true },\n        { key: \"Mai\", label: \"Mai\", type: \"number\", editable: true },\n        { key: \"Juin\", label: \"Juin\", type: \"number\", editable: true },\n        { key: \"Juillet\", label: \"Juillet\", type: \"number\", editable: true },\n        { key: \"Août\", label: \"Août\", type: \"number\", editable: true },\n        {\n          key: \"Septembre\",\n          label: \"Septembre\",\n          type: \"number\",\n          editable: true,\n        },\n        { key: \"Octobre\", label: \"Octobre\", type: \"number\", editable: true },\n        { key: \"Novembre\", label: \"Novembre\", type: \"number\", editable: true },\n        { key: \"Décembre\", label: \"Décembre\", type: \"number\", editable: true },\n        { key: \"action\" },\n      ];\n    },\n\n    async addProducerClick() {\n      if (this.selectedProduct == null) {\n        this.$bvToast.toast(\"Veuillez choisir un produit...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else if (this.selectedProducer == null) {\n        this.$bvToast.toast(\"Veuillez choisir un producteur...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else {\n        await axios\n          .post(\n            \"/producers/\" +\n              this.selectedProducer +\n              \"/product/\" +\n              this.selectedProduct\n          )\n          .then((response) => (this.requests = response.data));\n        this.changeProduct(this.selectedProduct);\n      }\n    },\n    computeTotalQuantityForAMonth(month) {\n      let ret = 0;\n      for (let index = 0; index < this.product.realQuantities.length; index++) {\n        switch (month) {\n          case 1:\n            ret += this.product.realQuantities[index].quantity1;\n            break;\n          case 2:\n            ret += this.product.realQuantities[index].quantity2;\n            break;\n          case 3:\n            ret += this.product.realQuantities[index].quantity3;\n            break;\n          case 4:\n            ret += this.product.realQuantities[index].quantity4;\n            break;\n          case 5:\n            ret += this.product.realQuantities[index].quantity5;\n            break;\n          case 6:\n            ret += this.product.realQuantities[index].quantity6;\n            break;\n          case 7:\n            ret += this.product.realQuantities[index].quantity7;\n            break;\n          case 8:\n            ret += this.product.realQuantities[index].quantity8;\n            break;\n          case 9:\n            ret += this.product.realQuantities[index].quantity9;\n            break;\n          case 10:\n            ret += this.product.realQuantities[index].quantity10;\n            break;\n          case 11:\n            ret += this.product.realQuantities[index].quantity11;\n            break;\n          case 12:\n            ret += this.product.realQuantities[index].quantity12;\n            break;\n        }\n      }\n      return ret;\n    },\n    computeColor() {\n      let color1,\n        color2,\n        color3,\n        color4,\n        color5,\n        color6,\n        color7,\n        color8,\n        color9,\n        color10,\n        color11,\n        color12;\n      if (\n        this.computeTotalQuantityForAMonth(1) -\n          this.product.quantities[0].quantity1 >\n        0\n      ) {\n        color1 = \"info\";\n      } else color1 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(2) -\n          this.product.quantities[0].quantity2 >\n        0\n      ) {\n        color2 = \"info\";\n      } else color2 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(3) -\n          this.product.quantities[0].quantity3 >\n        0\n      ) {\n        color3 = \"info\";\n      } else color3 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(4) -\n          this.product.quantities[0].quantity4 >\n        0\n      ) {\n        color4 = \"info\";\n      } else color4 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(5) -\n          this.product.quantities[0].quantity5 >\n        0\n      ) {\n        color5 = \"info\";\n      } else color5 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(6) -\n          this.product.quantities[0].quantity6 >\n        0\n      ) {\n        color6 = \"info\";\n      } else color6 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(7) -\n          this.product.quantities[0].quantity7 >\n        0\n      ) {\n        color7 = \"info\";\n      } else color7 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(8) -\n          this.product.quantities[0].quantity8 >\n        0\n      ) {\n        color8 = \"info\";\n      } else color8 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(9) -\n          this.product.quantities[0].quantity9 >\n        0\n      ) {\n        color9 = \"info\";\n      } else color9 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(10) -\n          this.product.quantities[0].quantity10 >\n        0\n      ) {\n        color10 = \"info\";\n      } else color10 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(11) -\n          this.product.quantities[0].quantity11 >\n        0\n      ) {\n        color11 = \"info\";\n      } else color11 = \"danger\";\n      if (\n        this.computeTotalQuantityForAMonth(12) -\n          this.product.quantities[0].quantity12 >\n        0\n      ) {\n        color12 = \"info\";\n      } else color12 = \"danger\";\n      return {\n        Janvier: color1,\n        Février: color2,\n        Mars: color3,\n        Avril: color4,\n        Mai: color5,\n        Juin: color6,\n        Juillet: color7,\n        Août: color8,\n        Septembre: color9,\n        Octobre: color10,\n        Novembre: color11,\n        Décembre: color12,\n      };\n    },\n\n    share() {\n       if (\n        this.computeTotalQuantityForAMonth(5) -\n          this.product.quantities[0].quantity5 >\n        0\n      ) {\n        let extraProducers = [];\n        let division =\n          this.computeTotalQuantityForAMonth(5) / this.product.producers.length;\n   \n        for (\n          let index = 0;\n          index < this.product.producers.length;\n          index++\n        ) {\n          if (this.product.producers[index].realQuantities[0].quantity5 <= division) {\n          \n          } else {\n            extraProducers.push(index);\n          }\n        }\n  \n        for (let index = 0; index < extraProducers.length; index++) {\n        \n\n          (this.items2[index].Mai-= (this.computeTotalQuantityForAMonth(5) -\n          this.product.quantities[0].quantity5)/extraProducers.length).toFixed(2);\n        //this.userRow = this.items2[index];\n        }\n        \n      }\n    },\n\n    async deleteProduct(item) {\n      console.log(item);\n     \n     /*await axios\n        .delete(\n          \"/producers/\" +\n            this.product.producers[item.id].id +\n            \"/product/\" +\n            this.product.id\n        )\n        .then((response) => (this.requests = response.data));\n      this.changeProduct(this.product.id);\n      */\n    },\n\n    async saveEdit(item) {\n      await axios\n        .put(\n          \"/products/\" +\n            this.product.id +\n            \"/producer/\" +\n            this.product.producers[item.id].id,\n          JSON.stringify({\n            id: this.product.id,\n            name: this.product.name,\n            packaging: this.product.packaging,\n            realQuantities: this.product.producers[item.id].realQuantities,\n            price: this.product.price,\n            seasonInformation: this.product.seasonInformation,\n          })\n        )\n        .then((response) => (this.requests = response.data));\n\n      this.userRow = [];\n      this.changeProduct(this.product.id);\n    },\n\n    async handleInput(value, data) {\n      let doEdit = true;\n      if (this.userRow.length > 0) {\n        doEdit = false;\n      }\n\n      if (doEdit) {\n        this.userRow.push({ ...data.item });\n  \n      }\n\n      switch (data.field.key) {\n        case \"Janvier\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity1: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity1 =\n              value;\n          }\n          break;\n        case \"Février\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity2: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity2 =\n              value;\n          }\n          break;\n        case \"Mars\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity3: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity3 =\n              value;\n          }\n          break;\n        case \"Avril\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity4: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity4 =\n              value;\n          }\n          break;\n        case \"Mai\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity5: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity5 =\n              value;\n          }\n          break;\n        case \"Juin\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity6: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity6 =\n              value;\n          }\n          break;\n        case \"Juillet\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity7: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity7 =\n              value;\n          }\n          break;\n        case \"Août\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity8: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity8 =\n              value;\n          }\n          break;\n        case \"Septembre\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity9: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity9 =\n              value;\n          }\n          break;\n        case \"Octobre\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity10: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity10 =\n              value;\n          }\n          break;\n        case \"Novembre\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.product.id,\n              quantity11: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity11 =\n              value;\n          }\n          break;\n        case \"Décembre\":\n          if (this.product.producers[data.index].realQuantities.length == 0) {\n            this.product.producers[data.index].realQuantities[0] = {\n              id: this.produ18ct.id,\n              quantity12: value,\n            };\n          } else {\n            this.product.producers[data.index].realQuantities[0].quantity12 =\n              value;\n          }\n          break;\n\n        default:\n          break;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn {\n  font-size: 0.8rem;\n}\n\n#titleId {\n  font-family: \"Gill Sans\", \"Gill Sans MT\", Calibri, \"Trebuchet MS\", sans-serif;\n  padding-left: 25px;\n  font-size: 1.5rem;\n  border-width: 1px;\n  border-style: none;\n  border-color: black;\n  border-radius: 25px;\n}\n\n.table {\n  margin-left: 0px;\n  margin-right: 0px;\n  font-size: 15px;\n  width: 100%;\n  table-layout: fixed;\n  margin-bottom: 0px;\n  padding-left: 0px;\n}\n\n#producerFieldId {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  border: solid;\n  padding-left: 6px;\n  font-size: 0.9rem;\n  font-weight: bold;\n  background-color: rgb(42, 42, 216);\n  color: rgb(250, 250, 250);\n  border-color: rgb(42, 42, 216);\n}\n</style>"],"sourceRoot":"src/views"}]}