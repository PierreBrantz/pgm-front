{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Theoretical.vue?vue&type=style&index=0&id=dc6b7a84&scoped=true&lang=css&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Theoretical.vue","mtime":1629378977872},{"path":"/home/pan/Dev/maraichage/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFnLXRoZW1lLWFscGluZSB7CiAgICBAaW5jbHVkZSBhZy10aGVtZS1hbHBpbmUoKAogICAgICAgIC8vIHVzZSB0aGVtZSBwYXJhbWV0ZXJzIHdoZXJlIHBvc3NpYmxlCiAgICAgICAgYWxwaW5lLWFjdGl2ZS1jb2xvcjogZGVlcHBpbmsKICAgICkpOwoKICAgIC5hZy1oZWFkZXIgewogICAgICAgIC8vIG9yIHdyaXRlIENTUyBzZWxlY3RvcnMgdG8gbWFrZSBjdXN0b21pc2F0aW9ucyBiZXlvbmQgd2hhdCB0aGUgcGFyYW1ldGVycyBzdXBwb3J0CiAgICAgICAgdGV4dC1zdHlsZTogaXRhbGljOwogICAgfQo="},{"version":3,"sources":["Theoretical.vue"],"names":[],"mappingsoBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"Theoretical.vue","sourceRoot":"src/views","sourcesContent":["<template >\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <div style=\"flex: 1 1 auto\">\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%\"\n        class=\"ag-theme-alpine\"\n        id=\"myGrid\"\n        :gridOptions=\"gridOptions\"\n        :rowData=\"rowData\"\n        :columnDefs=\"columnDefs\"\n        :modules=\"modules\"\n        :headerHeight=\"headerHeight\"\n      ></ag-grid-vue>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { AgGridVue } from \"@ag-grid-community/vue\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport axios from \"axios\";\n\nconst THEORETICAL_QUANTITY_COLOR = \"#ffe0cc\";\nconst TOTAL_COLOR = \"#ccffb3\";\n\nexport default {\n  data() {\n    return {\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      rowData: null,\n      columnDefs: null,\n      modules: AllCommunityModules,\n      headerHeight: null,\n    };\n  },\n\n  components: {\n    AgGridVue,\n  },\n  methods: {\n    onGridReady(params) {\n      params.api.sizeColumnsToFit();\n      window.addEventListener(\"resize\", function () {\n        setTimeout(function () {\n          params.api.sizeColumnsToFit();\n        });\n      });\n\n      params.api.sizeColumnsToFit();\n    },\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  beforeMount() {\n    this.headerHeight = 20;\n    this.gridOptions = {\n      onCellValueChanged: function (event) {\n        axios\n          .put(\n            \"/products/\" + event.data.id,\n            JSON.stringify({\n              price: event.data.price,\n              id: event.data.id,\n              name: event.data.name,\n              packaging: event.data.packaging,\n              quantities: event.data.quantities,\n            })\n          )\n          .then((response) => (this.requests = response.data));\n      },\n    };\n    this.columnDefs = [\n      {\n        headerName: \"Légumes\",\n        field: \"name\",\n        width: 200,\n        sortable: true,\n        pinned: \"left\",\n      },\n      {\n        headerName: \"Condit#\",\n        field: \"name\",\n        width: 100,\n        pinned: \"left\",\n\n        valueGetter: function (params) {\n          if (params.data.packaging.name != null) {\n            return params.data.packaging.name;\n          }\n        },\n      },\n      {\n        headerName: \"Prix\",\n        field: \"price\",\n        valueGetter: function (params) {\n          if (params.data.price != null) {\n            return params.data.price + \"€\";\n          }\n        },\n        width: 80,\n        pinned: \"left\",\n      },\n      {\n        field: \"quantity1\",\n        headerName: \"Mai\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity1;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.quantities[0] === \"undefined\") {\n              params.data.quantities[0] = {\n                id: params.data.id,\n                quantity1: newValInt,\n              };\n            } else {\n              params.data.quantities[0].quantity1 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity1\",\n        headerName: \"Mai\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity1;\n            }\n            return sum;\n          }\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity2\",\n        headerName: \"Jui\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity2;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.quantities[0] === \"undefined\") {\n              params.data.quantities[0] = {\n                id: params.data.id,\n                quantity2: newValInt,\n              };\n            } else {\n              params.data.quantities[0].quantity2 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity2\",\n        headerName: \"Jui\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity2;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity3\",\n        headerName: \"Jul\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity3;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity3: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity3 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity3\",\n        headerName: \"Jul\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity3;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity4\",\n        headerName: \"Aou\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity4;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity4: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity4 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity4\",\n        headerName: \"Aou\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity4;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity5\",\n        headerName: \"Sep\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity5;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity5: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity5 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity5\",\n        headerName: \"Sep\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity5;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity6\",\n        headerName: \"Oct\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity6;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity6: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity6 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity6\",\n        headerName: \"Oct\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity6;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity7\",\n        headerName: \"Nov\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity7;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity7: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity7 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity7\",\n        headerName: \"Nov\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity7;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity8\",\n        headerName: \"Dec\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity8;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity8: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity8 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity8\",\n        headerName: \"Dec\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity8;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        field: \"quantity9\",\n        headerName: \"Jan\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity9;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity9: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity9 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity9\",\n        headerName: \"Jan\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity9;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        headerName: \"Fev\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: { \"background-color\": THEORETICAL_QUANTITY_COLOR },\n        valueGetter: function (params) {\n          if (params.data.quantities[0] != null) {\n            return params.data.quantities[0].quantity10;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.quantities[0] === \"undefined\") {\n            params.data.quantities[0] = {\n              id: params.data.id,\n              quantity10: newValInt,\n            };\n          } else {\n            params.data.quantities[0].quantity10 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        headerName: \"Fev\",\n        editable: false,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            var sum = 0;\n            for (let i = 0; i < params.data.realQuantities.length; i++) {\n              sum += params.data.realQuantities[i].quantity10;\n            }\n            return sum;\n          }\n        },\n\n        width: 70,\n      },\n      {\n        \n        headerName: \"Théo\",\n        marryChildren:true,\n        children:[{\n            headerName: 'test',\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n         valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.quantities.length; i++) {\n            sum +=\n              params.data.quantities[i].quantity1 +\n              params.data.quantities[i].quantity2 +\n              params.data.quantities[i].quantity3 +\n              params.data.quantities[i].quantity4 +\n              params.data.quantities[i].quantity5 +\n              params.data.quantities[i].quantity6 +\n              params.data.quantities[i].quantity7 +\n              params.data.quantities[i].quantity8 +\n              params.data.quantities[i].quantity9 +\n              params.data.quantities[i].quantity10;\n          }\n          return sum;\n        }\n      },\n      {\n        headerName: \"Réel\",\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              params.data.realQuantities[i].quantity1 +\n              params.data.realQuantities[i].quantity2 +\n              params.data.realQuantities[i].quantity3 +\n              params.data.realQuantities[i].quantity4 +\n              params.data.realQuantities[i].quantity5 +\n              params.data.realQuantities[i].quantity6 +\n              params.data.realQuantities[i].quantity7 +\n              params.data.realQuantities[i].quantity8 +\n              params.data.realQuantities[i].quantity9 +\n              params.data.realQuantities[i].quantity10;\n          }\n          return sum;\n        },\n      }]},\n\n      {\n        headerName: \"Théo\",\n         marryChildren:true,\n        children:[{\n        headerName: \"Théo\",\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.quantities.length; i++) {\n            sum +=\n              params.data.quantities[i].quantity1 * params.data.price +\n              params.data.quantities[i].quantity2 * params.data.price +\n              params.data.quantities[i].quantity3 * params.data.price +\n              params.data.quantities[i].quantity4 * params.data.price +\n              params.data.quantities[i].quantity5 * params.data.price +\n              params.data.quantities[i].quantity6 * params.data.price +\n              params.data.quantities[i].quantity7 * params.data.price +\n              params.data.quantities[i].quantity8 * params.data.price +\n              params.data.quantities[i].quantity9 * params.data.price +\n              params.data.quantities[i].quantity10 * params.data.price;\n          }\n          return sum + '€';\n        }\n      },\n      {\n    \n        headerName: \"Réel\",\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              params.data.realQuantities[i].quantity1 * params.data.price +\n              params.data.realQuantities[i].quantity2 * params.data.price +\n              params.data.realQuantities[i].quantity3 * params.data.price +\n              params.data.realQuantities[i].quantity4 * params.data.price +\n              params.data.realQuantities[i].quantity5 * params.data.price +\n              params.data.realQuantities[i].quantity6 * params.data.price +\n              params.data.realQuantities[i].quantity7 * params.data.price +\n              params.data.realQuantities[i].quantity8 * params.data.price +\n              params.data.realQuantities[i].quantity9 * params.data.price +\n              params.data.realQuantities[i].quantity10 * params.data.price;\n          }\n          return sum + '€';\n        }\n      }]},\n    ],\n \n    axios\n      .get(\"/products\")\n      .then((response) => (this.products = response.data))\n      .then((rowData) => (this.rowData = rowData));\n  },\n};\nwindow.numberParser = function numberParser(params) {\n  return Number(params.newValue);\n};\n</script>\n \n<style scoped>\n\n.ag-theme-alpine {\n    @include ag-theme-alpine((\n        // use theme parameters where possible\n        alpine-active-color: deeppink\n    ));\n\n    .ag-header {\n        // or write CSS selectors to make customisations beyond what the parameters support\n        text-style: italic;\n    }\n</style>\n"]}]}