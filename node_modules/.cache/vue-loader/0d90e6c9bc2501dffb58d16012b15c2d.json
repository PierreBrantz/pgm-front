{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Product.vue?vue&type=style&index=0&id=35171425&scoped=true&lang=css&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Product.vue","mtime":1630591901992},{"path":"/home/pan/Dev/maraichage/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5idG4gewogIGZvbnQtc2l6ZTogMC44cmVtOwp9Cg=="},{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqLA;AACA;AACA","file":"Product.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container>\n      <b-row>\n        <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProduct\"\n            :options=\"productList\"\n            v-on:change=\"changeProduct\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n        <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProducer\"\n            :options=\"producers\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n\n        <b-col cols=\"2\">\n          <b-button\n            variant=\"outline-primary\"\n            @click=\"addProducerClick\"\n            class=\"m-2\"\n            >Associer Producteur</b-button\n          >\n        </b-col>\n        <b-col cols=\"3\"> </b-col>\n      </b-row>\n      <b-row v-if=\"product != null\">{{ product.name + ' ' + product.packaging.name }}</b-row>\n      <b-row> \n        \n        <div>\n    <b-table striped hover responsive :items=\"items\"></b-table>\n  </div></b-row>\n    </b-container>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nconst TOTAL_COLOR = \"#ccffb3\";\n\nexport default {\n  data() {\n    return {\n      selectedProducer: null,\n      selectedProduct: null,\n      producers: [{ value: null, text: \"Choisir un producteur...\" }],\n      productList: [{ value: null, text: \"Choisir un produit...\" }],\n      product: null,     \n      items: []\n      \n    };\n  },\n  components: {},\n  mounted() {\n    this.fetchProducers();\n    this.fetchProductList();\n    \n  },\n  methods: {\n   \n    async fetchProducers() {\n      const json = await axios\n        .get(\"/producers\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.producers.push({ value: element.id, text: element.abr })\n      );\n    },\n\n    async fetchProductList() {\n      const json = await axios\n        .get(\"/products\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.productList.push({ value: element.id, text: element.name })\n      );\n    },\n    async changeProduct(arg) {\n      const json = await axios\n        .get(\"/products/\" + arg)\n        .then((response) => (this.requests = response.data));\n        this.product = json[0];\n      //if (typeof params.data.quantities[0] === \"undefined\") {\n\n\n    \n      this.items = [{\n          col1 : 'Théorique',\n          Janvier : this.product.quantities[0].quantity1,Février : this.product.quantities[0].quantity2,\n          Mars : this.product.quantities[0].quantity3,Avril : this.product.quantities[0].quantity4,\n          Mai : this.product.quantities[0].quantity5,Juin : this.product.quantities[0].quantity6,\n          Juillet : this.product.quantities[0].quantity7,Août : this.product.quantities[0].quantity8,\n          Septembre: this.product.quantities[0].quantity9,Octobre : this.product.quantities[0].quantity10,\n          Novembre : this.product.quantities[0].quantity11,Décembre : this.product.quantities[0].quantity12\n      },\n      {\n        col1 : 'Différence'\n      },\n      {\n        col1 : 'Prix'\n      },\n      \n      ];\n      \n     \n      for (let index = 0; index < this.product.producers.length; index++) {\n       let q1 = 0, q2= 0, q3= 0, q4= 0, q5= 0, q6= 0, q7= 0, q8= 0, q9= 0, q10= 0, q11= 0, q12 = 0;\n         if(this.product.producers[index].realQuantities.length > 0 && this.product.producers[index].realQuantities[0] !== \"undefined\"){\n            q1 = this.product.producers[index].realQuantities[0].quantity1;\n            q2 = this.product.producers[index].realQuantities[0].quantity2;\n            q3 = this.product.producers[index].realQuantities[0].quantity3;\n           q4 = this.product.producers[index].realQuantities[0].quantity4;\n           q5 = this.product.producers[index].realQuantities[0].quantity5;\n           q6 = this.product.producers[index].realQuantities[0].quantity6;\n           q7 = this.product.producers[index].realQuantities[0].quantity7;\n           q8 = this.product.producers[index].realQuantities[0].quantity8;\n           q9 = this.product.producers[index].realQuantities[0].quantity9;\n           q10 = this.product.producers[index].realQuantities[0].quantity10;\n           q11 = this.product.producers[index].realQuantities[0].quantity11;\n           q12 = this.product.producers[index].realQuantities[0].quantity12;\n\n         }\n        this.items.push({\n          col1 : this.product.producers[index].abr,\n          Janvier : q1,Février : q2,\n          Mars : q3,Avril : q4,\n          Mai : q5,Juin : q6,\n          Juillet : q7,Août : q8,\n          Septembre: q9,Octobre : q10,\n          Novembre : q11,Décembre : q12\n\n\n        }\n\n        );\n        \n        \n      }\n      \n      \n\n    },\n\n    async addProducerClick() {\n      if (this.selectedProduct == null) {\n        this.$bvToast.toast(\"Veuillez choisir un produit...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else if (this.selectedProducer == null) {\n        this.$bvToast.toast(\"Veuillez choisir un producteur...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else {\n        await axios\n          .post(\n            \"/producers/\" +\n              this.selectedProducer +\n              \"/product/\" +\n              this.selectedProduct\n          )\n          .then((response) => (this.requests = response.data));\n        await axios\n          .get(\"/products/producer/\" + this.selectedProducer)\n          .then((response) => (this.products = response.data))\n          .then((rowData) => (this.rowData = rowData));\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.btn {\n  font-size: 0.8rem;\n}\n</style>"]}]}