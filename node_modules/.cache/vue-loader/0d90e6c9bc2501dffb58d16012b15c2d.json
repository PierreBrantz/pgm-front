{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Product.vue?vue&type=style&index=0&id=35171425&scoped=true&lang=css&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Product.vue","mtime":1630356652959},{"path":"/home/pan/Dev/maraichage/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ0bnsKICBmb250LXNpemU6IDAuOHJlbTsKfQo="},{"version":3,"sources":["Product.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4hBA;AACA;AACA","file":"Product.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container>\n      <b-row\n        >\n         <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProduct\"\n            :options=\"productList\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n        <b-col cols=\"3\">\n          <b-form-select\n            v-model=\"selectedProducer\"\n            :options=\"producers\"\n            v-on:change=\"changeProducer\"\n            class=\"m-2\"\n          ></b-form-select>\n        </b-col>\n\n       \n\n        <b-col cols=\"2\">\n        \n          <b-button\n            variant=\"outline-primary\"\n            @click=\"addProducerClick\"\n            class=\"m-2\"\n            >Associer Producteur</b-button\n          >\n            \n      \n        </b-col>\n        <b-col cols=\"3\"> </b-col>\n      </b-row>\n    </b-container>\n    <div style=\"flex: 1 1 auto\">\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%\"\n        class=\"ag-theme-alpine\"\n        id=\"myGrid\"\n        :gridOptions=\"gridOptions\"\n        :rowData=\"rowData\"\n        :columnDefs=\"columnDefs\"\n        :modules=\"modules\"\n      ></ag-grid-vue>\n    </div>\n    <modal-addproducer></modal-addproducer>\n    <modal-addproduct :producerId=\"producerId\"></modal-addproduct>\n  </div>\n</template>\n\n<script>\nimport { AgGridVue } from \"@ag-grid-community/vue\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport axios from \"axios\";\nimport AddProducerModal from \"../components/AddProducerModal.vue\";\nimport AddProductModal from \"../components/AddProductModal.vue\";\n\n\nconst TOTAL_COLOR = \"#ccffb3\";\n\nexport default {\n  data() {\n    return {\n      selectedProducer: null,\n      selectedProduct: null,\n      producers: [{ value: null, text: \"Choisir un producteur...\" }],\n      productList: [{ value: null, text: \"Choisir un produit...\" }],\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      rowData: null,\n      columnDefs: null,\n      modules: AllCommunityModules,\n      producerId: null,\n    };\n  },\n  components: {\n    AgGridVue,\n    \"modal-addproducer\": AddProducerModal,\n    \"modal-addproduct\": AddProductModal,\n\n  },\n  mounted() {\n    this.fetchProducers();\n    this.fetchProductList();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n  },\n  methods: {\n\n    printDoc() {\n\tconsole.log(\"Exporting to PDF...\");\n\tconst docDefinition = getDocDefinition(\n    \tprintParams, \n        gridOptions.api, \n        gridOptions.columnApi\n\t);\n\tpdfMake.createPdf(docDefinition).download();\n},\n    async fetchProducers() {\n      const json = await axios\n        .get(\"/producers\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.producers.push({ value: element.id, text: element.abr })\n      );\n    },\n\n    async fetchProductList() {\n      const json = await axios\n        .get(\"/products\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.productList.push({ value: element.id, text: element.name })\n      );\n    },\n    onGridReady(params) {\n      params.api.sizeColumnsToFit();\n      window.addEventListener(\"resize\", function () {\n        setTimeout(function () {\n          params.api.sizeColumnsToFit();\n        });\n      });\n\n      params.api.sizeColumnsToFit();\n    },\n    async changeProducer(arg) {\n      const json = await axios\n        .get(\"/products/producer/\" + arg)\n        .then((response) => (this.requests = response.data))\n        .then((rowData) => (this.rowData = rowData));\n      this.producerId = arg;\n    },\n\n    addProducerClick() {\n      this.$root.$emit(\"bv::show::modal\", \"modal-addproducer\", \"#btnShow\");\n    },\n\n    async addProductClick() {\n      if (this.selectedProducer == null) {\n        this.$bvToast.toast(\"Veuillez choisir un producteur...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else if (this.selectedProduct == null) {\n        this.$bvToast.toast(\"Veuillez choisir un produit...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else {\n        await axios\n          .post(\n            \"/producers/\" +\n              this.selectedProducer +\n              \"/product/\" +\n              this.selectedProduct\n          )\n          .then((response) => (this.requests = response.data));\n        await axios\n          .get(\"/products/producer/\" + this.selectedProducer)\n          .then((response) => (this.products = response.data))\n          .then((rowData) => (this.rowData = rowData));\n      }\n    },\n  },\n\n  beforeMount() {\n    this.gridOptions = {\n      onCellValueChanged: function (event) {\n        axios\n          .put(\n            \"/products/\" + event.data.id + \"/producer/\" + event.data.producerId,\n            JSON.stringify({\n              id: event.data.id,\n              name: event.data.name,\n              packaging: event.data.packaging,\n              realQuantities: event.data.realQuantities,\n              price: event.data.price,\n            })\n          )\n          .then((response) => (this.requests = response.data));\n      },\n    };\n    this.columnDefs = [\n      {\n        headerName: \"Légumes\",\n        field: \"name\",\n        width: 200,\n        sortable: true,\n        pinned: \"left\",\n      },\n      {\n        headerName: \"Condit#\",\n        field: \"name\",\n        width: 100,\n        pinned: \"left\",\n        valueGetter: function (params) {\n          if (params.data.packaging.name != null) {\n            return params.data.packaging.name;\n          }\n        },\n      },\n      {\n        headerName: \"Prix\",\n        field: \"price\",\n        valueGetter: function (params) {\n          if (params.data.price != null) {\n            return params.data.price + \"€\";\n          }\n        },\n        width: 100,\n        pinned: \"left\",\n      },\n      {\n        field: \"quantity1\",\n        headerName: \"Mai\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity1;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.realQuantities[0] === \"undefined\") {\n              params.data.realQuantities[0] = {\n                id: params.data.id,\n                quantity1: newValInt,\n              };\n            } else {\n              params.data.realQuantities[0].quantity1 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity2\",\n        headerName: \"Jui\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity2;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (typeof params.data.realQuantities[0] === \"undefined\") {\n              params.data.realQuantities[0] = {\n                id: params.data.id,\n                quantity2: newValInt,\n              };\n            } else {\n              params.data.realQuantities[0].quantity2 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity3\",\n        headerName: \"Jul\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity3;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity3: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity3 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity4\",\n        headerName: \"Aou\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity4;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity4: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity4 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity5\",\n        headerName: \"Sep\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity5;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity5: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity5 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity6\",\n        headerName: \"Oct\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity6;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity6: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity6 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity7\",\n        headerName: \"Nov\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity7;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity7: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity7 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity8\",\n        headerName: \"Dec\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity8;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity8: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity8 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity9\",\n        headerName: \"Jan\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity9;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity9: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity9 = newValInt;\n            axios\n              .get(\"/products/producer/0\")\n              .then((response) => (this.products = response.data))\n              .then((rowData) => (this.rowData = rowData));\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity10\",\n        headerName: \"Fev\",\n        editable: true,\n        valueParser: numberParser,\n        valueGetter: function (params) {\n          if (params.data.realQuantities[0] != null) {\n            return params.data.realQuantities[0].quantity10;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          axios\n            .get(\"/products/producer/0\")\n            .then((response) => (this.products = response.data))\n            .then((rowData) => (this.rowData = rowData));\n          if (typeof params.data.realQuantities[0] === \"undefined\") {\n            params.data.realQuantities[0] = {\n              id: params.data.id,\n              quantity10: newValInt,\n            };\n          } else {\n            params.data.realQuantities[0].quantity10 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        headerName: \"Réel\",\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              params.data.realQuantities[i].quantity1 +\n              params.data.realQuantities[i].quantity2 +\n              params.data.realQuantities[i].quantity3 +\n              params.data.realQuantities[i].quantity4 +\n              params.data.realQuantities[i].quantity5 +\n              params.data.realQuantities[i].quantity6 +\n              params.data.realQuantities[i].quantity7 +\n              params.data.realQuantities[i].quantity8 +\n              params.data.realQuantities[i].quantity9 +\n              params.data.realQuantities[i].quantity10;\n          }\n          return sum;\n        },\n      },\n\n      {\n        headerName: \"Réel\",\n        width: 70,\n        cellStyle: { \"background-color\": TOTAL_COLOR },\n        valueGetter: function (params) {\n          var sum = 0;\n          for (let i = 0; i < params.data.realQuantities.length; i++) {\n            sum +=\n              params.data.realQuantities[i].quantity1 * params.data.price +\n              params.data.realQuantities[i].quantity2 * params.data.price +\n              params.data.realQuantities[i].quantity3 * params.data.price +\n              params.data.realQuantities[i].quantity4 * params.data.price +\n              params.data.realQuantities[i].quantity5 * params.data.price +\n              params.data.realQuantities[i].quantity6 * params.data.price +\n              params.data.realQuantities[i].quantity7 * params.data.price +\n              params.data.realQuantities[i].quantity8 * params.data.price +\n              params.data.realQuantities[i].quantity9 * params.data.price +\n              params.data.realQuantities[i].quantity10 * params.data.price;\n          }\n          return sum + \"€\";\n        },\n      },\n    ];\n    axios\n      .get(\"/products/producer/0\")\n      .then((response) => (this.products = response.data))\n      .then((rowData) => (this.rowData = rowData));\n  },\n};\nwindow.numberParser = function numberParser(params) {\n  return Number(params.newValue);\n};\n</script>\n\n<style scoped>\n.btn{\n  font-size: 0.8rem;\n}\n</style>"]}]}