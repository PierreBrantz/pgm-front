{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Season.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Season.vue","mtime":1635960839549},{"path":"/home/pan/Dev/maraichage/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYnV0dG9uQm94ewogIGJvcmRlcjogMXB4IHNvbGlkOwogIHRleHQtYWxpZ246IGNlbnRlcjsKICBib3JkZXItcmFkaXVzOiAuMjVyZW07Cn0KCgouc2Vhc29uMCB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZiAhaW1wb3J0YW50Owp9Ci5zZWFzb24xIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjhhNzQ1ICFpbXBvcnRhbnQ7Cn0KLnNlYXNvbjIgewogIGJhY2tncm91bmQtY29sb3I6ICMxN2EyYjggIWltcG9ydGFudDsKfQouc2Vhc29uMyB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmYzEwNyAhaW1wb3J0YW50Owp9CgouYWctaGVhZGVyLWdyb3VwLWNlbGwtbGFiZWwsIC5hZy1oZWFkZXItY2VsbC1sYWJlbCB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIGFsaWduLXNlbGY6IGNlbnRlcjsKICAgIG92ZXJmbG93OiBoaWRkZW47CiAgICBhbGlnbi1pdGVtczogY2VudGVyOwogICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CiAgICAKICAgIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmFnLXRoZW1lLWFscGluZSAuYWctY2VsbCwgLmFnLXRoZW1lLWFscGluZSAuYWctZnVsbC13aWR0aC1yb3cgLmFnLWNlbGwtd3JhcHBlci5hZy1yb3ctZ3JvdXAgewogICAgYm9yZGVyOiAxcHggc29saWQgdHJhbnNwYXJlbnQ7CiAgICAKICAgIHBhZGRpbmctbGVmdDogM3B4OwogICAgcGFkZGluZy1yaWdodDogMHB4OwogICAgLXdlYmtpdC1mb250LXNtb290aGluZzogc3VicGl4ZWwtYW50aWFsaWFzZWQ7CiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0K"},{"version":3,"sources":["Season.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8SA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Season.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container>\n      <b-row\n        ><b-col cols= 4 class=\"m-2\">\n          \n          <div v-if=\"seasons.length > 0\" class=\"buttonBox\">\n            <b-button\n              variant=\"outline-secondary\"\n              v-on:click=\"currentSeason = 0\"\n              class=\"m-2\"\n              >{{ seasons[0].name }}</b-button\n            >\n            <b-button\n              variant=\"success\"\n              v-on:click=\"currentSeason = 1\"\n              class=\"m-2\"\n              >{{ seasons[1].name }}</b-button\n            >\n            <b-button\n              variant=\"info\"\n              v-on:click=\"currentSeason = 2\"\n              class=\"m-2\"\n              >{{ seasons[2].name }}</b-button\n            >\n            <b-button\n              variant=\"warning\"\n              v-on:click=\"currentSeason = 3\"\n              class=\"m-2\"\n              >{{ seasons[3].name }}</b-button\n            >\n          </div>\n        </b-col>\n        <b-col cols= 4>\n        </b-col>\n        <b-col cols= 2 class=\"m-2\">\n          <div class=\"saveBox\">\n          <b-button\n              variant=\"primary\"\n              v-on:click=\"save()\"\n              class=\"m-2\"\n              >Sauver</b-button\n            >\n          </div>\n        </b-col>\n      </b-row>\n    </b-container>\n    <ag-grid-vue\n      style=\"width: 100%; height: 100%\"\n      class=\"ag-theme-alpine\"\n      :columnDefs=\"columnDefs\"\n      :rowData=\"rowData\"\n      :gridOptions=\"gridOptions\"\n    >\n    </ag-grid-vue>\n  </div>\n</template>\n\n<script>\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport axios from \"axios\";\nimport { AgGridVue } from \"ag-grid-vue\";\n\nexport default {\n  name: \"App\",\n  data() {\n    return {\n      columnDefs: null,\n      rowData: null,\n      gridOptions: null,\n      seasons: [],\n      currentSeason: 0,\n    };\n  },\n  components: {\n    AgGridVue,\n  },\n  mounted() {\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.gridApi.sizeColumnsToFit();\n    this.fetchProductList();\n    this.fetchSeasonality();\n  },\n  beforeMount() {\n    this.gridOptions = {\n      onCellClicked: (event) => {\n        switch (event.colDef.field) {\n          case \"january\": {\n            event.data.seasonalityProduct.january = this.currentSeason;\n            break;\n          }\n          case \"february\": {\n            event.data.seasonalityProduct.february = this.currentSeason;\n            break;\n          }\n          case \"march\": {\n            event.data.seasonalityProduct.march = this.currentSeason;\n            break;\n          }\n          case \"april\": {\n            event.data.seasonalityProduct.april = this.currentSeason;\n            break;\n          }\n          case \"may\": {\n            event.data.seasonalityProduct.may = this.currentSeason;\n            break;\n          }\n          case \"june\": {\n            event.data.seasonalityProduct.june = this.currentSeason;\n            break;\n          }\n          case \"july\": {\n            event.data.seasonalityProduct.july = this.currentSeason;\n            break;\n          }\n          case \"august\": {\n            event.data.seasonalityProduct.august = this.currentSeason;\n            break;\n          }\n          case \"september\": {\n            event.data.seasonalityProduct.september = this.currentSeason;\n            break;\n          }\n          case \"october\": {\n            event.data.seasonalityProduct.october = this.currentSeason;\n            break;\n          }\n          case \"november\": {\n            event.data.seasonalityProduct.november = this.currentSeason;\n            break;\n          }\n          case \"december\": {\n            event.data.seasonalityProduct.december = this.currentSeason;\n            break;\n          }\n        }\n\n        this.gridOptions.api.redrawRows();\n      },\n    };\n\n    this.columnDefs = [\n      {\n        field: \"name\",\n        width:300,\n        resizable: true,\n        cellClass: (params) => {\n          return this.selectColor(params.value);\n        },\n      },\n      {\n        field: \"january\",\n        headerName: \"janvier\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.january);\n          }\n        },\n      },\n      {\n        field: \"february\",\n        headerName: \"Février\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.february);\n          }\n        },\n      },\n      {\n        field: \"march\",\n        headerName: \"Mars\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.march);\n          }\n        },\n      },\n      {\n        field: \"april\",\n        headerName: \"Avril\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.april);\n          }\n        },\n      },\n      {\n        field: \"may\",\n        headerName: \"Mai\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.may);\n          }\n        },\n      },\n      {\n        field: \"june\",\n        headerName: \"Juin\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.june);\n          }\n        },\n      },\n      {\n        field: \"july\",\n        headerName: \"Juillet\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.july);\n          }\n        },\n      },\n      {\n        field: \"august\",\n        headerName: \"Août\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.august);\n          }\n        },\n      },\n      {\n        field: \"september\",\n        headerName: \"Septembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.september);\n          }\n        },\n      },\n      {\n        field: \"october\",\n        headerName: \"Octobre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.october);\n          }\n        },\n      },\n      {\n        field: \"november\",\n        headerName: \"Novembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.november);\n          }\n        },\n      },\n      {\n        field: \"december\",\n        headerName: \"Décembre\",\n        cellClass: (params) => {\n          if (params.data.seasonalityProduct != null) {\n            return this.selectColor(params.data.seasonalityProduct.december);\n          }\n        },\n      },\n    ];\n  },\n\n  methods: {\n    async fetchProductList() {\n      const json = await axios\n        .get(\"/products\")\n        .then((response) => (this.products = response.data))\n        .then((rowData) => (this.rowData = rowData));\n    },\n    async fetchSeasonality() {\n      const json = await axios\n        .get(\"/seasons\")\n        .then((response) => (this.seasons = response.data));\n    },\n\n    selectColor(season) {\n      switch (season) {\n        case 1:\n          return \"season1\";\n        case 2:\n          return \"season2\";\n        case 3:\n          return \"season3\";\n        default:\n          return \"season0\";\n      }\n    },\n    save(){\n      console.log(this.products);\n      axios\n          .post(\n            \"/products\" ,\n            this.products\n            \n          )\n    }\n  },\n};\n</script>\n<style >\n\n.buttonBox{\n  border: 1px solid;\n  text-align: center;\n  border-radius: .25rem;\n}\n\n\n.season0 {\n  background-color: #fff !important;\n}\n.season1 {\n  background-color: #28a745 !important;\n}\n.season2 {\n  background-color: #17a2b8 !important;\n}\n.season3 {\n  background-color: #ffc107 !important;\n}\n\n.ag-header-group-cell-label, .ag-header-cell-label {\n    display: block;\n    align-self: center;\n    overflow: hidden;\n    align-items: center;\n    text-overflow: ellipsis;\n    \n    text-align: center;\n}\n\n.ag-theme-alpine .ag-cell, .ag-theme-alpine .ag-full-width-row .ag-cell-wrapper.ag-row-group {\n    border: 1px solid transparent;\n    \n    padding-left: 3px;\n    padding-right: 0px;\n    -webkit-font-smoothing: subpixel-antialiased;\n    text-align: center;\n}\n</style>"]}]}