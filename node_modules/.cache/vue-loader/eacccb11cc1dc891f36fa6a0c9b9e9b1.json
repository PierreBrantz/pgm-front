{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/AddProduct.vue?vue&type=template&id=0e971fc8&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/AddProduct.vue","mtime":1644944029264},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}