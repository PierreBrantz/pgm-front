{"remainingRequest":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/pan/Dev/maraichage/src/views/Producer.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/pan/Dev/maraichage/src/views/Producer.vue","mtime":1646857244359},{"path":"/home/pan/Dev/maraichage/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/pan/Dev/maraichage/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFnLXRoZW1lLWFscGluZSAuYWctaGVhZGVyLWNlbGwsCi5hZy10aGVtZS1hbHBpbmUgLmFnLWhlYWRlci1ncm91cC1jZWxsIHsKICBtYXJnaW4tbGVmdDogNXB4OwogIHBhZGRpbmctbGVmdDogNXB4OwogIHBhZGRpbmctcmlnaHQ6IDNweDsKfQoKLmFnLXRoZW1lLWFscGluZSAuYWctY2VsbCwKLmFnLXRoZW1lLWFscGluZSAuYWctZnVsbC13aWR0aC1yb3cgLmFnLWNlbGwtd3JhcHBlci5hZy1yb3ctZ3JvdXAgewogIG1hcmdpbi1sZWZ0OiAwcHg7CiAgcGFkZGluZy1sZWZ0OiA1cHg7CiAgcGFkZGluZy1yaWdodDogM3B4Owp9CgoubXktbGVnZW5kIHsKICBoZWlnaHQ6IDUwcHg7Cn0KCiNteS1sZWdlbmQgLmxlZ2VuZC10aXRsZSB7CiAgdGV4dC1hbGlnbjogbGVmdDsKCiAgZm9udC13ZWlnaHQ6IGJvbGQ7CiAgZm9udC1zaXplOiA5MCU7Cn0KI215LWxlZ2VuZCB1bCB7CiAgZmxvYXQ6IGxlZnQ7CiAgbGlzdC1zdHlsZTogbm9uZTsKfQojbXktbGVnZW5kIHVsIGxpIHsKICBsaXN0LXN0eWxlOiBub25lOwoKICBtYXJnaW4tbGVmdDogNXB4Owp9CiNteS1sZWdlbmQgdWwgbGkgc3BhbiB7CiAgZmxvYXQ6IGxlZnQ7CiAgaGVpZ2h0OiAxNnB4OwogIHdpZHRoOiAzMHB4OwogIG1hcmdpbi1yaWdodDogNXB4OwoKICBib3JkZXI6IDFweCBzb2xpZCAjOTk5Owp9CgouY2FyZC1ib2R5IHsKICBwYWRkaW5nOiAwLjRyZW07CiAgZm9udC1zaXplOiA4MCU7Cn0K"},{"version":3,"sources":["Producer.vue"],"names":[],"mappingso7BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA","file":"Producer.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div style=\"display: flex; flex-direction: column; height: 100%\">\n    <b-container fluid>\n      <b-card-group deck>\n        <b-card class=\"m-1\" align=\"center\" style=\"height: 50px\">\n          <b-row>\n            <b-col>\n              <b-form-select\n                v-if=\"showAdminBoard\"\n                v-model=\"selectedProducer\"\n                :options=\"producers\"\n                v-on:change=\"changeProducer\"\n                size=\"sm\"\n              ></b-form-select>\n            </b-col>\n            <b-col>\n              <b-form-select\n                v-model=\"selectedProduct\"\n                :options=\"productList\"\n                size=\"sm\"\n              ></b-form-select>\n            </b-col>\n            <b-col>\n              <b-button\n                variant=\"outline-primary\"\n                @click=\"addProductClick\"\n                size=\"sm\"\n                ><b-icon icon=\"link\" scale=\"1.3\" aria-hidden=\"true\"></b-icon\n              ></b-button>\n            </b-col>\n          </b-row>\n        </b-card>\n\n        <b-card\n          v-if=\"selectedProducer != null && selectedProducer != 0\"\n          class=\"m-1\"\n          style=\"height: 50px\"\n          align=\"center\"\n        >\n          <b-row>\n            <b-col>\n              <b-card-text>Enregistrer le contrat</b-card-text>\n            </b-col>\n            <b-col>\n              <b-button variant=\"outline-primary\" @click=\"downloadPDF\" size=\"sm\"\n                ><b-icon icon=\"download\" scale=\"1.3\" aria-hidden=\"true\"></b-icon\n              ></b-button>\n            </b-col>\n          </b-row>\n        </b-card>\n\n        <b-card v-if=\"seasons.length > 0\" id=\"my-legend\" class=\"m-1\" style=\"width: 100%;height: 50px\">\n          <b-row>\n            <b-col>\n              <ul>\n                <li><span style=\"background: #fff\"></span>{{ seasons[0].name}}</li>\n                <li><span style=\"background: #28a745\"></span>{{ seasons[1].name}}</li>                \n              </ul>\n            </b-col>\n\n            <b-col>\n              <ul>\n                <li><span style=\"background: #17a2b8\"></span>{{ seasons[2].name}}</li>\n                <li><span style=\"background: #ffc107\"></span>{{ seasons[3].name}}</li>\n              </ul>\n            </b-col>\n            <b-col v-if=\"seasons.length > 4\">\n              <ul>\n                <li><span style=\"background: #dc3545\"></span>{{ seasons[4].name}}</li>                \n              </ul>\n            </b-col>\n          </b-row>\n        </b-card>\n      </b-card-group>\n      \n\n      <product-detail-modal :productDetail=\"productDetail\"></product-detail-modal>\n    </b-container>\n    <div style=\"flex: 1 1 auto\">\n      <ag-grid-vue\n        style=\"width: 100%; height: 100%\"\n        class=\"ag-theme-alpine\"\n        id=\"myGrid\"\n        :gridOptions=\"gridOptions\"\n        :rowData=\"rowData\"\n        :columnDefs=\"columnDefs\"\n        :modules=\"modules\"\n        @cell-clicked=\"onCellClicked\"\n      ></ag-grid-vue>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { AgGridVue } from \"@ag-grid-community/vue\";\nimport \"ag-grid-community/dist/styles/ag-grid.css\";\nimport \"ag-grid-community/dist/styles/ag-theme-alpine.css\";\nimport { AllCommunityModules } from \"@ag-grid-community/all-modules\";\nimport axios from \"axios\";\nimport jsPDF from \"jspdf\";\nimport JsPDFAutotable from \"jspdf-autotable\";\nimport ProductDetailModal from \"../components/ProductDetailModal.vue\";\n\nexport default {\n  data() {\n    return {\n      selectedProducer: null,\n      selectedProduct: null,\n      producers: [{ value: null, text: \"Producteurs...\" }],\n      productList: [{ value: null, text: \"Produits...\" }],\n      gridOptions: null,\n      gridApi: null,\n      columnApi: null,\n      rowData: null,\n      columnDefs: null,\n      modules: AllCommunityModules,\n      producerId: null,\n      productsByProducer: [],\n      productDetail: null,\n      products: [],\n      seasons: [],\n      producerInfo: null,\n      contractParam: null\n\n    };\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    showAdminBoard() {\n      if (this.currentUser && this.currentUser[\"roles\"]) {\n        return this.currentUser[\"roles\"].includes(\"ROLE_ADMIN\");\n      }\n      return false;\n    },\n    showUserBoard() {\n      if (this.currentUser && this.currentUser[\"roles\"]) {\n        return this.currentUser[\"roles\"].includes(\"ROLE_USER\");\n      }\n      return false;\n    },\n  },\n  components: {\n    AgGridVue,\n    JsPDFAutotable,\n    \"product-detail-modal\": ProductDetailModal,\n  },\n  mounted() {\n    if (!this.currentUser) {\n      this.$router.push(\"/login\");\n    }\n    this.fetchProducers();\n    this.fetchProductList();\n    this.fetchSeasonalities();\n    this.gridApi = this.gridOptions.api;\n    this.gridColumnApi = this.gridOptions.columnApi;\n    this.changeProducer();\n    this.gridApi.sizeColumnsToFit();\n    this.fetchContractParams();\n  },\n  methods: {\n    findProducerName(id) {\n      this.producers.find((item) => {\n        if (item.value === id) {\n          return item.text;\n        }\n      });\n    },\n\n    downloadPDF() {\n      const doc = new jsPDF('l');\n      const pageSize = doc.internal.pageSize;\n            const pageWidth = pageSize.width ? pageSize.width : pageSize.getWidth();\n            const pageHeight = pageSize.height ? pageSize.height : pageSize.getHeight();\n      \n      let producer = this.producerInfo.find((item) => {\n              if (item.id === this.producerId) {\n                return item;\n              }\n            });\n     \n      \n      doc.setFontSize(15);\n      doc.text(this.contractParam.title, 10, 10);\n      doc.setFontSize(10);\n   \n      doc.text(producer.firstName + \" \" + producer.name , 10, 20);\n     \n      doc.text(\"GSM: \" + (producer.gsm != null ? producer.gsm : \"\"), 10, 25);\n      \n      doc.text(\"Tel.: \" + (producer.phone != null ? producer.phone : \"\"), 10, 30);\n      doc.text(\"Mail: \" + (producer.mail != null ? producer.mail : \"\") , 10, 35);\n\n      doc.text((producer.company != null ? producer.company : \"\"), 80, 20);\n      doc.text((producer.number != null ?  producer.number : \"\") + \", \" + (producer.road != null ? producer.road : \"\") , 80, 25);\n      doc.text((producer.postCode != null ? producer.postCode : \"\") + \" \" + (producer.town != null ? producer.town : \"\") , 80, 30);\n\n      doc.text(\"TVA: \" + (producer.tva != null ? producer.tva : \"\"), 160, 20);\n  \n      doc.line(0, 40, 400, 35);\n      let rows = [];\n     \n      this.productsByProducer.forEach((element) => {\n        \n        if (element.currentRealQuantity) {\n          var temp = [\n            element.name,\n            element.price + \"€\",\n            element.packaging.name,\n            (element.currentRealQuantity.quantity1 == null ? 0 : element.currentRealQuantity.quantity1) + '(' + (element.price * element.seasonalityProduct.january).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity2 == null ? 0 : element.currentRealQuantity.quantity2) + '(' + (element.price * element.seasonalityProduct.february).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity3 == null ? 0 : element.currentRealQuantity.quantity3) + '(' + (element.price * element.seasonalityProduct.march).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity4 == null ? 0 : element.currentRealQuantity.quantity4) + '(' + (element.price * element.seasonalityProduct.april).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity5 == null ? 0 : element.currentRealQuantity.quantity5) + '(' + (element.price * element.seasonalityProduct.may).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity6 == null ? 0 : element.currentRealQuantity.quantity6) + '(' + (element.price * element.seasonalityProduct.june).toFixed(2)+ '€)',\n            (element.currentRealQuantity.quantity7 == null ? 0 : element.currentRealQuantity.quantity7) + '(' + (element.price * element.seasonalityProduct.july).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity8 == null ? 0 : element.currentRealQuantity.quantity8) + '(' + (element.price * element.seasonalityProduct.august).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity9 == null ? 0 : element.currentRealQuantity.quantity9) + '(' + (element.price * element.seasonalityProduct.september).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity10 == null ? 0 : element.currentRealQuantity.quantity10) + '(' + (element.price * element.seasonalityProduct.october).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity11 == null ? 0 : element.currentRealQuantity.quantity11) + '(' + (element.price * element.seasonalityProduct.november).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity12 == null ? 0 : element.currentRealQuantity.quantity12) + '(' + (element.price * element.seasonalityProduct.december).toFixed(2) + '€)',\n            (element.currentRealQuantity.quantity1 || 0) +\n            (element.currentRealQuantity.quantity2 || 0) +\n            (element.currentRealQuantity.quantity3 || 0) +\n            (element.currentRealQuantity.quantity4 || 0) +\n            (element.currentRealQuantity.quantity5 || 0) +\n            (element.currentRealQuantity.quantity6 || 0) +\n            (element.currentRealQuantity.quantity7 || 0) +\n            (element.currentRealQuantity.quantity8 || 0) +\n            (element.currentRealQuantity.quantity9 || 0) +\n            (element.currentRealQuantity.quantity10 || 0) +\n            (element.currentRealQuantity.quantity11 || 0) +\n            (element.currentRealQuantity.quantity12 || 0) +\n            \n              '(' + ((element.currentRealQuantity.quantity1 *\n                element.price *\n                element.seasonalityProduct.january || 0) +\n              (element.currentRealQuantity.quantity2 *\n                element.price *\n                element.seasonalityProduct.february || 0) +\n              (element.currentRealQuantity.quantity3 *\n                element.price *\n                element.seasonalityProduct.march || 0) +\n              (element.currentRealQuantity.quantity4 *\n                element.price *\n                element.seasonalityProduct.april || 0) +\n              (element.currentRealQuantity.quantity5 *\n                element.price *\n                element.seasonalityProduct.may || 0) +\n              (element.currentRealQuantity.quantity6 *\n                element.price *\n                element.seasonalityProduct.june || 0) +\n              (element.currentRealQuantity.quantity7 *\n                element.price *\n                element.seasonalityProduct.july || 0) +\n              (element.currentRealQuantity.quantity8 *\n                element.price *\n                element.seasonalityProduct.august || 0) +\n              (element.currentRealQuantity.quantity9 *\n                element.price *\n                element.seasonalityProduct.september || 0) +\n              (element.currentRealQuantity.quantity10 *\n                element.price *\n                element.seasonalityProduct.october || 0) +\n              (element.currentRealQuantity.quantity11 *\n                element.price *\n                element.seasonalityProduct.november || 0) +\n              (element.currentRealQuantity.quantity12 *\n                element.price *\n                element.seasonalityProduct.december || 0)\n            ).toFixed(2) + \"€)\"\n            \n          \n          ];\n          rows.push(temp);\n        }\n      });\n\n      doc.text(this.contractParam.endTxt, 20, pageHeight - 40, { });\n\n\n //     doc.text(this.contractParam.endTxt, 20, pageHeight - 15, {\n   //   align: 'right'\n   // })\n       doc.text('Fait à .................., le ......../......./.......', 200, pageHeight - 30, {\n   //   align: 'right'\n    })\n         doc.text('Signature' , 200, pageHeight - 23, {\n   //   align: 'right'\n    })\n\n      \n      JsPDFAutotable(doc, {\n        head: [\n          [\n            \"Légume\",\n            \"Prix\",\n            \"Condit#\",\n            \"Jan\",\n            \"Fev\",\n            \"Mar\",\n            \"Avr\",\n            \"Mai\",\n            \"Jui\",\n            \"Jul\",\n            \"Aou\",\n            \"Sep\",\n            \"Oct\",\n            \"Nov\",\n            \"Dec\",\n            \"Tot\"\n          ],\n        ],\n        margin: { top: 50 },\n        styles: { fontSize: 7 },\n        body: rows,\n      }),\n        doc.save(\n          \"Contrat_\" +\n            this.producers.find((item) => {\n              if (item.value === this.producerId) {\n                return item;\n              }\n            }).text +\n            \".pdf\"\n        );\n    },\n\n    async fetchProducers() {\n      const json = await axios\n        .get(\"/producers\")\n        .then((response) => (this.requests = response.data));\n      json.forEach((element) =>\n        this.producers.push({ value: element.id, text: element.abr })\n        \n      );\n      this.producerInfo = json;\n    },\n\n     async fetchContractParams() {\n      const json = await axios\n        .get(\"/contractParams\")\n        .then((response) => (this.requests = response.data));\n      this.contractParam = json;\n     \n    },\n\n    async fetchProductList() {\n      const json = await axios\n        .get(\"/products\")\n        .then((response) => (this.requests = response.data));  \n        this.products = json;      \n      json.forEach((element) =>\n        this.productList.push({ value: element.id, text: element.name })\n      );\n    },\n    async fetchSeasonalities() {\n      const json = await axios\n        .get(\"/seasons\")\n        .then((response) => (this.seasons = response.data));\n    },\n    onGridReady(params) {\n      params.api.sizeColumnsToFit();\n      window.addEventListener(\"resize\", function () {\n        setTimeout(function () {\n          params.api.sizeColumnsToFit();\n        });\n      });\n\n      params.api.sizeColumnsToFit();\n    },\n    async findProducerByAbr(arg) {\n      const json = await axios\n        .get(\"/producers/abr/\" + arg)\n        .then((response) => (this.requests = response.data));\n\n      return json;\n    },\n\n    async changeProducer(arg) {\n      if (this.showUserBoard) {\n        arg = await this.findProducerByAbr(this.currentUser.username).Id;\n      }\n\n      if (arg) {\n        const json = await axios\n          .get(\"/products/producer/\" + arg)\n          .then((response) => (this.requests = response.data))\n          .then((rowData) => (this.rowData = rowData));\n        this.producerId = arg;\n        this.productsByProducer = json;\n        this.selectedProducer = this.producerId;\n      }\n    },\n\n    async addProductClick() {\n      if (this.selectedProducer == null) {\n        this.$bvToast.toast(\"Veuillez choisir un producteur...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else if (this.selectedProduct == null) {\n        this.$bvToast.toast(\"Veuillez choisir un produit...\", {\n          title: \"Info\",\n          variant: \"danger\",\n          solid: true,\n        });\n      } else {\n        await axios\n          .post(\n            \"/producers/\" +\n              this.selectedProducer +\n              \"/product/\" +\n              this.selectedProduct\n          )\n          .then((response) => (this.requests = response.data));\n        const json = await axios\n          .get(\"/products/producer/\" + this.selectedProducer)\n          .then((response) => (this.products = response.data))\n          .then((rowData) => (this.rowData = rowData));\n      \n        this.productsByProducer = json;\n      \n      }\n    },\n    onCellClicked(params) {\n      if (params.column.colId == \"name\") {       \n        this.productDetail = this.products[params.data.id - 1];\n        this.$root.$emit(\"bv::show::modal\", \"product-detail-modal\", \"#btnShow\");\n      }\n    },\n  },\n\n  beforeMount() {\n \n    this.gridOptions = {\n      async onCellValueChanged (event) {\n      \n       const json = await axios\n          .post(\n            \"/products/\" +\n              event.data.id +\n              \"/producer/\" +\n              event.data.producers[0].id,\n            event.data\n          )\n          .then((response) => (this.requests = response.data));\n          this.producerProducts = json.producerProducts;\n      },\n    };\n\n    this.columnDefs = [\n      {\n        headerName: \"Légumes\",\n        field: \"name\",\n        width: 150,\n        sortable: true,\n        pinned: \"left\",\n      },\n      {\n        headerName: \"Condit#\",\n        field: \"name\",\n        width: 60,\n        pinned: \"left\",\n        valueGetter: function (params) {\n          if (params.data.packaging && params.data.packaging.name != null) {\n            return params.data.packaging.name;\n          }\n        },\n      },\n      {\n        headerName: \"Prix\",\n        field: \"price\",\n        valueGetter: function (params) {\n          if (params.data.price != null) {\n            return params.data.price + \"€\";\n          }\n        },\n        width: 50,\n        pinned: \"left\",\n      },\n      {\n        field: \"quantity1\",\n        headerName: \"Jan\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleJan,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity1;\n          }\n        },\n        valueSetter: function (params) {          \n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (valueChanged) {\n            if (!params.data.currentRealQuantity) {\n              params.data.currentRealQuantity = {\n                id: params.data.id,\n                quantity1: newValInt                \n              };\n            } else {\n              params.data.currentRealQuantity.quantity1 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity2\",\n        headerName: \"Fév\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleFeb,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity2;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (params.data.b !== newValInt) {\n            if (!params.data.currentRealQuantity) {\n              params.data.currentRealQuantity = {\n                id: params.data.id,\n                quantity2: newValInt,\n              };\n            } else {\n              params.data.currentRealQuantity.quantity2 = newValInt;\n            }\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity3\",\n        headerName: \"Mar\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleMar,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity3;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity3: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity3 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity4\",\n        headerName: \"Avr\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleApr,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity4;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity4: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity4 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity5\",\n        headerName: \"Mai\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleMay,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity5;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity5: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity5 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity6\",\n        headerName: \"Juin\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleJun,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity6;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity6: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity6 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity7\",\n        headerName: \"Juil\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleJul,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity7;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity7: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity7 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity8\",\n        headerName: \"Aou\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleAug,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity8;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity8: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity8 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity9\",\n        headerName: \"Sep\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleSep,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity9;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity9: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity9 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity10\",\n        headerName: \"Oct\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleOct,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity10;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity10: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity10 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity11\",\n        headerName: \"Nov\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleNov,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity11;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity11: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity11 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        field: \"quantity12\",\n        headerName: \"Dec\",\n        editable: true,\n        valueParser: numberParser,\n        cellStyle: cellStyleDec,\n        valueGetter: function (params) {\n          if (params.data.currentRealQuantity) {\n            return params.data.currentRealQuantity.quantity12;\n          }\n        },\n        valueSetter: function (params) {\n          var newValInt = parseInt(params.newValue);\n          var valueChanged = params.data.b !== newValInt;\n          if (!params.data.currentRealQuantity) {\n            params.data.currentRealQuantity = {\n              id: params.data.id,\n              quantity12: newValInt,\n            };\n          } else {\n            params.data.currentRealQuantity.quantity12 = newValInt;\n          }\n          return valueChanged;\n        },\n        width: 70,\n      },\n      {\n        headerName: \"Qte Tot\",\n        width: 90,\n        pinned: \"right\",\n        valueGetter: function (params) {\n          if (!params.data.currentRealQuantity) return 0;\n          return (\n            (params.data.currentRealQuantity.quantity1 || 0) +\n            (params.data.currentRealQuantity.quantity2 || 0) +\n            (params.data.currentRealQuantity.quantity3 || 0) +\n            (params.data.currentRealQuantity.quantity4 || 0) +\n            (params.data.currentRealQuantity.quantity5 || 0) +\n            (params.data.currentRealQuantity.quantity6 || 0) +\n            (params.data.currentRealQuantity.quantity7 || 0) +\n            (params.data.currentRealQuantity.quantity8 || 0) +\n            (params.data.currentRealQuantity.quantity9 || 0) +\n            (params.data.currentRealQuantity.quantity10 || 0) +\n            (params.data.currentRealQuantity.quantity11 || 0) +\n            (params.data.currentRealQuantity.quantity12 || 0)\n          );\n        },\n      },\n\n      {\n        headerName: \"Prix Tot\",\n        width: 90,\n        pinned: \"right\",\n        valueGetter: function (params) {\n          if (!params.data.currentRealQuantity) return 0;\n          return (\n            (\n              (params.data.currentRealQuantity.quantity1 *\n                params.data.price *\n                params.data.seasonalityProduct.january || 0) +\n              (params.data.currentRealQuantity.quantity2 *\n                params.data.price *\n                params.data.seasonalityProduct.february || 0) +\n              (params.data.currentRealQuantity.quantity3 *\n                params.data.price *\n                params.data.seasonalityProduct.march || 0) +\n              (params.data.currentRealQuantity.quantity4 *\n                params.data.price *\n                params.data.seasonalityProduct.april || 0) +\n              (params.data.currentRealQuantity.quantity5 *\n                params.data.price *\n                params.data.seasonalityProduct.may || 0) +\n              (params.data.currentRealQuantity.quantity6 *\n                params.data.price *\n                params.data.seasonalityProduct.june || 0) +\n              (params.data.currentRealQuantity.quantity7 *\n                params.data.price *\n                params.data.seasonalityProduct.july || 0) +\n              (params.data.currentRealQuantity.quantity8 *\n                params.data.price *\n                params.data.seasonalityProduct.august || 0) +\n              (params.data.currentRealQuantity.quantity9 *\n                params.data.price *\n                params.data.seasonalityProduct.september || 0) +\n              (params.data.currentRealQuantity.quantity10 *\n                params.data.price *\n                params.data.seasonalityProduct.october || 0) +\n              (params.data.currentRealQuantity.quantity11 *\n                params.data.price *\n                params.data.seasonalityProduct.november || 0) +\n              (params.data.currentRealQuantity.quantity12 *\n                params.data.price *\n                params.data.seasonalityProduct.december || 0)\n            ).toFixed(2) + \"€\"\n          );\n        },\n      },\n    ];\n    axios\n      .get(\"/products/producer/0\")\n      .then((response) => (this.products = response.data))\n      .then((rowData) => (this.rowData = rowData));\n  },\n};\nwindow.numberParser = function numberParser(params) {\n  return Number(params.newValue);\n};\n\nwindow.cellStyleJan = function cellStyleJan(params) {\n  const color = numberToColor(params.data.seasonalityProduct.january);\n  return { backgroundColor: color };\n};\n\nwindow.cellStyleFeb = function cellStyleFeb(params) {\n  const color = numberToColor(params.data.seasonalityProduct.february);\n  return { backgroundColor: color };\n};\nwindow.cellStyleMar = function cellStyleMar(params) {\n  const color = numberToColor(params.data.seasonalityProduct.march);\n  return { backgroundColor: color };\n};\nwindow.cellStyleApr = function cellStyleApr(params) {\n  const color = numberToColor(params.data.seasonalityProduct.april);\n  return { backgroundColor: color };\n};\nwindow.cellStyleMay = function cellStyleMay(params) {\n  const color = numberToColor(params.data.seasonalityProduct.may);\n  return { backgroundColor: color };\n};\nwindow.cellStyleJun = function cellStyleJun(params) {\n  const color = numberToColor(params.data.seasonalityProduct.june);\n  return { backgroundColor: color };\n};\nwindow.cellStyleJul = function cellStyleJul(params) {\n  const color = numberToColor(params.data.seasonalityProduct.july);\n  return { backgroundColor: color };\n};\nwindow.cellStyleAug = function cellStyleAug(params) {\n  const color = numberToColor(params.data.seasonalityProduct.august);\n  return { backgroundColor: color };\n};\nwindow.cellStyleSep = function cellStyleSep(params) {\n  const color = numberToColor(params.data.seasonalityProduct.september);\n  return { backgroundColor: color };\n};\nwindow.cellStyleOct = function cellStyleOct(params) {\n  const color = numberToColor(params.data.seasonalityProduct.october);\n  return { backgroundColor: color };\n};\nwindow.cellStyleNov = function cellStyleNov(params) {\n  const color = numberToColor(params.data.seasonalityProduct.november);\n  return { backgroundColor: color };\n};\nwindow.cellStyleDec = function cellStyleDec(params) {\n  const color = numberToColor(params.data.seasonalityProduct.december);\n  return { backgroundColor: color };\n};\n\nwindow.numberToColor = function numberToColor(val) {\n\n  if (val === 1) {\n    return \"#fff\";\n  } else if (val === 2) {\n    return \"#28a745\";\n  } else if (val === 3) {\n    return \"#17a2b8\";\n  } else if (val === 4) {\n    return \"#ffc107\";\n  }else {\n    return \"#dc3545\";\n  }\n};\n</script>\n\n<style>\n.ag-theme-alpine .ag-header-cell,\n.ag-theme-alpine .ag-header-group-cell {\n  margin-left: 5px;\n  padding-left: 5px;\n  padding-right: 3px;\n}\n\n.ag-theme-alpine .ag-cell,\n.ag-theme-alpine .ag-full-width-row .ag-cell-wrapper.ag-row-group {\n  margin-left: 0px;\n  padding-left: 5px;\n  padding-right: 3px;\n}\n\n.my-legend {\n  height: 50px;\n}\n\n#my-legend .legend-title {\n  text-align: left;\n\n  font-weight: bold;\n  font-size: 90%;\n}\n#my-legend ul {\n  float: left;\n  list-style: none;\n}\n#my-legend ul li {\n  list-style: none;\n\n  margin-left: 5px;\n}\n#my-legend ul li span {\n  float: left;\n  height: 16px;\n  width: 30px;\n  margin-right: 5px;\n\n  border: 1px solid #999;\n}\n\n.card-body {\n  padding: 0.4rem;\n  font-size: 80%;\n}\n</style>"]}]}